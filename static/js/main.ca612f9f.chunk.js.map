{"version":3,"sources":["components/Nav/index.js","components/Grid/index.js","components/Tab/index.js","components/Header/index.js","components/DashControls/index.js","utils/lifeAPIController.js","components/Content/contentAdmin.js","constructors.js","components/Label/index.js","components/Button/index.js","components/Modal/index.js","components/Content/contentCreate.js","components/Card/index.js","components/Dropdown/index.js","components/PointToggler/togglerButton.js","components/PointToggler/index.js","utils/partials.js","components/Avatars/index.js","components/Content/contentEdit.js","components/Content/contentCreateAvatars.js","components/Content/contentEditQuestions.js","components/Content/contentCreateQuestions.js","components/Content/index.js","pages/Admin.js","pages/Create.js","pages/Edit.js","App.js","serviceWorker.js","index.js"],"names":["Nav","state","open","width","window","innerWidth","updateWidth","newState","_this","setState","toggleNav","addEventListener","this","removeEventListener","react_default","a","createElement","className","react_router_dom","to","onClick","data-toggle","data-target","aria-controls","aria-expanded","aria-label","concat","id","location","pathname","Component","Container","_ref","fluid","children","Row","_ref2","Col","_ref3","size","split","map","join","Tab","_this$props","props","label","_this$props2","activeTab","Header","text","SubHeader","ContentHeader","DashControls","class","click","update","gameObj","axios","put","findbyId","get","ContentAdmin","games","game","gameName","components_DashControls","gameId","delete","then","process","Avatar","name","picture","t1","t2","t3","t4","t5","tracking","Object","classCallCheck","trait1","trait2","trait3","trait4","trait5","Question","Q","responses","Response","response","outcomes","Outcome","trait","amount","upDown","GameObj","traits","avatars","questions","templateAvatars","templateQuestion","i","templateResponse","Label","Form_default","Group","controlId","Control","type","traitNumber","placeholder","value","onChange","disabled","AdminButton","buttonType","instructions","instructionHeaders","MyVerticallyCenteredModal","_React$Component","possibleConstructorReturn","getPrototypeOf","call","nextInstruction","bind","assertThisInitialized","instructionsIndex","instructionHeadersIndex","showNextButton","inherits","createClass","key","length","show","Modal","assign","aria-labelledby","centered","closeButton","Title","Body","Footer","es_Button","onHide","React","texts","ContentCreate","handleChange","buildTraits","modalShow","event","_event$target","target","console","log","defineProperty","_this2","templateObj","keys","traitsObj","reduce","obj","thing","objectSpread","constructor","filter","startsWith","GameName","post","results","data","_id","history","push","_this3","ButtonToolbar","variant","Modal_MyVerticallyCenteredModal","components_Label","Button","Card","src","image","avatar","avatarIndex","remover","Dropdown","as","options","option","QuestionDropdown","qProps","t1Props","t2Props","TogglerButton","Button_default","PointToggler","_Component","togglerButton","minus","plus","PointToggler2","partial","fn","_len","arguments","args","Array","_key","_len2","rest","_key2","apply","temporaryImagesCreate","Avatars","components_Card","showWidget","pictureUpdater","traitName","increment","updater","decrement","ContentEdit","updateAvatarName","updatePicture","removeAvatar","addAvatar","getGame","getGameIdUrl","allNewAvs","toConsumableArray","cur","newAv","newGameObj","allNewAvTraits","forRealUpdateAvatar","url","newAvatarWithPicture","splice","newAvs","templateAvatar","indexOf","fromAvatars","substring","cloudinary","openUploadWidget","cloud_name","upload_preset","thumbnailTransformation","height","crop","multiple","clientAllowedFormats","maxFileSize","maxImageWidth","maxImageHeight","minImageWidth","minImageHeight","error","result","newUrl","info","thumbnail_url","_this4","components_Avatars","updateAvatarTrait","passedState","ContentCreateAvatars","contentEdit","ContentEditQuestions","handleOutcomeTrait","handleTraitAmount","handleOutcomeText","handleResponseText","handleQuestionText","handleQuestionTraits","handleQuestionDropdown","updateQuestionDb","removeQuestion","addQuestion","questionIndex","fromQuestions","rIndex","oIndex","$set","_event$target2","_event$target3","whichTrait","index","_q","dbUpdate","allNewQs","newQs","values","newQ","newQuestions","allProps","_question","enabled","for","PointToggler_PointToggler","ContentCreateQuestions","contentEditQuestions","Content","contentAdmin","gameNameGameId","contentCreate","contentCreateAvatars","contentCreateQuestions","globalState","Admin","organization","components_Content","everyGame","allGames","Create","Edit","App","currentGameId","undefined","getAllGames","nonprofitName","basename","components_Nav","react_router","exact","path","render","pages_Admin","prefix","pages_Create","pages_Edit","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4OA8FeA,oNAvFbC,MAAQ,CACNC,MAAM,EACNC,MAAOC,OAAOC,cAGhBC,YAAc,WAEZ,IAAMC,EAAW,CAAEJ,MAAOC,OAAOC,YAG7BG,EAAKP,MAAMC,MAAQK,EAASJ,MAAQ,MACtCI,EAASL,MAAO,GAIlBM,EAAKC,SAASF,MAIhBG,UAAY,WACVF,EAAKC,SAAS,CAAEP,MAAOM,EAAKP,MAAMC,2FAIlCE,OAAOO,iBAAiB,SAAUC,KAAKN,4DAIvCF,OAAOS,oBAAoB,SAAUD,KAAKN,8CAI1C,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,kBAGAL,EAAAC,EAAAC,cAAA,UAEEI,QAASR,KAAKF,UACdO,UAAU,iBACVI,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBAEXX,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAS,OAAKd,KAAKX,MAAMC,KAAO,GAAK,YAA5B,mBAA0DyB,GAAG,aACzEb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,QAASR,KAAKF,UACdO,UAAwC,MAA7Bb,OAAOwB,SAASC,SAAmB,kBAAoB,WAClEV,GAAG,KAHL,cAQFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,QAASR,KAAKF,UACdO,WAAWb,OAAOwB,SAASC,SAAqE,mBAChGV,GAAE,WAHJ,WAQFL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEE,QAASR,KAAKF,UACdO,UAAU,WACVE,GAAG,KAHL,qBAzEIW,cCCX,SAASC,EAATC,GAAwC,IAAnBC,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,SACjC,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAS,OAAcO,EAAQ,SAAW,KAAOC,GAIxD,SAASC,EAATC,GAAkC,IAAnBH,EAAmBG,EAAnBH,MAAOC,EAAYE,EAAZF,SAC3B,OAAOpB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAS,OAAQO,EAAQ,SAAW,KAAOC,GAIlD,SAASG,EAATC,GAAiC,IAAlBC,EAAkBD,EAAlBC,KAAML,EAAYI,EAAZJ,SAC1B,OACEpB,EAAAC,EAAAC,cAAA,OACEC,UAAWsB,EACRC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,MAGPR,OCsBQS,6MAnCXvB,QAAU,WAAM,IAAAwB,EACepC,EAAKqC,MAAxBC,EADIF,EACJE,OACR1B,EAFYwB,EACGxB,SACP0B,4EAGH,IAGD1B,EAKAR,KALAQ,QAHC2B,EAQDnC,KAJAiC,MACIG,EALHD,EAKGC,UACAF,EANHC,EAMGD,MAKJ7B,EAAY,gBAOhB,OAJI+B,IAAcF,IACd7B,GAAa,oBAIbH,EAAAC,EAAAC,cAAA,MACIC,UAAWA,EACXG,QAASA,GAER0B,UArCChB,aCIX,SAASmB,EAAOJ,GACnB,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAa4B,EAAMK,OAKtC,SAASC,EAAUN,GACtB,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgB4B,EAAMK,OAKzC,SAASE,EAAcP,GAC1B,OACI/B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAoB4B,EAAMK,OAM1BpB,YCLXuB,MArBR,SAAsBR,GACzB,OAAIA,EAAM1B,GAEFL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI0B,EAAM1B,IAAIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BAC/BH,EAAAC,EAAAC,cAAA,KAAGC,UAAW4B,EAAMS,QACpBxC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BE,GAAI0B,EAAM1B,IAAK0B,EAAMK,QAMjEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAW4B,EAAMS,MAAOlC,QAASyB,EAAMU,QAC1CzC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAA4B4B,EAAMK,yBCZxD,SAASM,EAAOC,EAAS9B,GAE5B,OAAO+B,IAAMC,IAAN,iDAAAjC,OAA2DC,GAAM8B,GAYrE,SAASG,EAASjC,GAErB,OAAO+B,IAAMG,IAAN,iDAAAnC,OAA2DC,QCmBvDmC,mLA7BP,OACIhD,EAAAC,EAAAC,cAACe,EAAD,KAEKnB,KAAKiC,MAAMkB,MAAMtB,IAAI,SAAAuB,GAAI,OACtBlD,EAAAC,EAAAC,cAACe,EAAD,KACIjB,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACoC,EAAD,CAAeF,KAAMc,EAAKC,YAG9BnD,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACkD,EAAD,CAAaZ,MAAM,0BAA0BJ,KAAK,OAAO/B,GAAG,MADhE,IAEIL,EAAAC,EAAAC,cAACkD,EAAD,CAAaZ,MAAM,0BAA0BJ,KAAK,OAAO/B,GAAE,iBAAAO,OAAmBsC,EAAKG,UACnFrD,EAAAC,EAAAC,cAACkD,EAAD,CAAaZ,MAAM,4BAA4BJ,KAAK,OAAO/B,GAAE,mBAAAO,OAAqBsC,EAAKG,UACvFrD,EAAAC,EAAAC,cAACkD,EAAD,CAAaZ,MAAM,2BAA2BJ,KAAK,OAAOK,MAAO,WDf1F,IAAgB5B,ICeyFqC,EAAKG,ODbjHT,IACKU,OADL,iDAAA1C,OAC6DC,IACxD0C,KAAK,WACFjE,OAAOwB,SAASC,SAAWyC,8BCYXxD,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,sBAtBGc,oCCCdyC,EACT,SAAAA,EAAYC,EAAMC,EAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAAWC,OAAAC,EAAA,EAAAD,CAAApE,KAAA2D,GACtD3D,KAAK4D,KAAOA,EACZ5D,KAAK6D,QAAUA,EACf7D,KAAKsE,OAASR,EACd9D,KAAKuE,OAASR,EACd/D,KAAKwE,OAASR,EACdhE,KAAKyE,OAASR,EACdjE,KAAK0E,OAASR,EACdlE,KAAKmE,SAAWA,GAIXQ,EACT,SAAAA,EAAYC,EAAGC,EAAWP,EAAQC,GAASH,OAAAC,EAAA,EAAAD,CAAApE,KAAA2E,GACvC3E,KAAK4E,EAAIA,EACT5E,KAAK6E,UAAYA,EACjB7E,KAAKsE,OAASA,EACdtE,KAAKuE,OAASA,GAITO,EACT,SAAAA,EAAYC,EAAUC,GAAWZ,OAAAC,EAAA,EAAAD,CAAApE,KAAA8E,GAC7B9E,KAAK+E,SAAWA,EAChB/E,KAAKgF,SAAWA,GAIXC,EACT,SAAAA,EAAY3C,EAAM4C,EAAOC,EAAQC,GAAShB,OAAAC,EAAA,EAAAD,CAAApE,KAAAiF,GACtCjF,KAAKsC,KAAOA,EACZtC,KAAKkF,MAAQA,EACblF,KAAKmF,OAASA,EACdnF,KAAKoF,OAASA,GAITC,EACT,SAAAA,EAAYzB,EAAM0B,EAAQC,EAASC,GAAYpB,OAAAC,EAAA,EAAAD,CAAApE,KAAAqF,GAC3CrF,KAAK4D,KAAOA,EACZ5D,KAAKsF,OAASA,EACdtF,KAAKuF,QAAUA,EACfvF,KAAKwF,UAAYA,GAKrBC,EAAkB,CAAC,IAAI9B,EAAO,mBAAoB,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAIA,EAAO,mBAAoB,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAIA,EAAO,mBAAoB,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAIA,EAAO,mBAAoB,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAIA,EAAO,mBAAoB,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,KA2BxS,SAAS+B,EAAiBJ,GAC7B,IAAMT,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGhD,IAAI,SAAA8D,GAElC,OAVD,SAA0BL,GAG7B,OAFsB,IAAIR,EAAS,+BAAgC,CAAC,IAAIG,EAAQ,wBAAyBK,EAAO,GAAI,EAAG,MAAO,IAAIL,EAAQ,wBAAyBK,EAAO,GAAI,EAAG,QAStKM,CAAiBN,KAK5B,OAFuB,IAAIX,EAAS,0BAA2BE,EAAWS,EAAO,GAAIA,EAAO,yBChEjFO,MArBf,SAAe5D,GACX,OACI/B,EAAAC,EAAAC,cAACe,EAAD,KAEIjB,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,KAEID,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAK4F,MAAN,CAAYC,UAAU,iBAAiB3F,UAAU,YAE7CH,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAK8F,QAAN,CAAc5F,UAAW4B,EAAM5B,UAI3B6F,KAAK,OAAOtC,KAAM3B,EAAMkE,YAAaC,YAAanE,EAAMK,KAAM+D,MAAOpE,EAAMK,KAAMgE,SAAUrE,EAAMqE,SAAUC,SAAUtE,EAAMsE,eCDpIC,MAdf,SAAqBvE,GAIjB,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAGXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYoG,WAAYxE,EAAMwE,WAAYjG,QAASyB,EAAMzB,SAAUyB,EAAMK,mCCcnGoE,EAAe,CApBMxG,EAAAC,EAAAC,cAAA,eAAMF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,2UAE3BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,6BAAoDH,EAAAC,EAAAC,cAAA,wBAApD,6GAAqLF,EAAAC,EAAAC,cAAA,mDAArL,KAEAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,qHAA4IH,EAAAC,EAAAC,cAAA,2BAA5I,sEAEaF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,SAAgCH,EAAAC,EAAAC,cAAA,wBAAhC,6OAElBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,gEAAuFH,EAAAC,EAAAC,cAAA,mBAAvF,eAAgHF,EAAAC,EAAAC,cAAA,mBAAhH,4HAEeF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,2BAA1B,2EAA4HF,EAAAC,EAAAC,cAAA,2BAA5H,0JAEpBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,gGAEgBH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,wBAA+CH,EAAAC,EAAAC,cAAA,2BAA/C,qEAA2IF,EAAAC,EAAAC,cAAA,yBAA3I,6EAErBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,yJAAgLH,EAAAC,EAAAC,cAAA,iCAAhL,gCAEaF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,4JAIlBsG,EAAqB,CAAC,kBAAmB,UAAW,YAAa,YAAa,mBAIrEC,EAAb,SAAAC,GACI,SAAAD,EAAY3E,GAAO,IAAArC,EAAA,OAAAwE,OAAAC,EAAA,EAAAD,CAAApE,KAAA4G,IACfhH,EAAAwE,OAAA0C,EAAA,EAAA1C,CAAApE,KAAAoE,OAAA2C,EAAA,EAAA3C,CAAAwC,GAAAI,KAAAhH,KAAMiC,KAEDgF,gBAAkBrH,EAAKqH,gBAAgBC,KAArB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAEvBA,EAAKP,MAAQ,CACT+H,kBAAmB,EACnBC,wBAAyB,EACzBC,gBAAgB,GARL1H,EADvB,OAAAwE,OAAAmD,EAAA,EAAAnD,CAAAwC,EAAAC,GAAAzC,OAAAoD,EAAA,EAAApD,CAAAwC,EAAA,EAAAa,IAAA,kBAAApB,MAAA,WAcQ,GAAIrG,KAAKX,MAAM+H,kBAAoBV,EAAagB,OAAS,EAAG,CACxD,IAAIC,EAAO3H,KAAKX,MAAM+H,kBAAoB,EAAIV,EAAagB,OAAS,EACpE1H,KAAKH,SAAS,CACVuH,kBAAmBpH,KAAKX,MAAM+H,kBAAoB,EAClDC,wBAAyBrH,KAAKX,MAAM+H,kBAAoB,EACxDE,eAAgBK,OAnBhC,CAAAF,IAAA,SAAApB,MAAA,WA2BQ,OACInG,EAAAC,EAAAC,cAACwH,EAAA,EAADxD,OAAAyD,OAAA,GACQ7H,KAAKiC,MADb,CAEIN,KAAK,KACLmG,kBAAgB,gCAChBC,UAAQ,IAER7H,EAAAC,EAAAC,cAACwH,EAAA,EAAMvF,OAAP,CAAc2F,aAAW,GACrB9H,EAAAC,EAAAC,cAACwH,EAAA,EAAMK,MAAP,CAAalH,GAAG,iCACX4F,EAAmB3G,KAAKX,MAAMgI,2BAGvCnH,EAAAC,EAAAC,cAACwH,EAAA,EAAMM,KAAP,KACIhI,EAAAC,EAAAC,cAAA,SAAIsG,EAAa1G,KAAKX,MAAM+H,oBAC3BpH,KAAKX,MAAMiI,eACRpH,EAAAC,EAAAC,cAAA,UAAQI,QAASR,KAAKiH,iBAAtB,qBACE/G,EAAAC,EAAAC,cAAA,aAEVF,EAAAC,EAAAC,cAACwH,EAAA,EAAMO,OAAP,KACIjI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAAQ5H,QAASR,KAAKiC,MAAMoG,QAA5B,eA9CpBzB,EAAA,CAA+C0B,IAAMpH,WChBjDqH,EAAQ,CAAC,SAAU,SAAU,SAAU,SAAU,UA0HtCC,cArHX,SAAAA,EAAYvG,GAAO,IAAArC,EAAA,OAAAwE,OAAAC,EAAA,EAAAD,CAAApE,KAAAwI,IACf5I,EAAAwE,OAAA0C,EAAA,EAAA1C,CAAApE,KAAAoE,OAAA2C,EAAA,EAAA3C,CAAAoE,GAAAxB,KAAAhH,KAAMiC,KAEDwG,aAAe7I,EAAK6I,aAAavB,KAAlB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACpBA,EAAK8I,YAAc9I,EAAK8I,YAAYxB,KAAjB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAGnBA,EAAKP,MAAQ,CACTsJ,WAAW,GARA/I,4EAgBNgJ,GAAO,IAAAC,EACQD,EAAME,OAAtBlF,EADQiF,EACRjF,KAAMyC,EADEwC,EACFxC,MACd0C,QAAQC,IAAI,0BAA2BpF,EAAMyC,GAE7CrG,KAAKH,SAALuE,OAAA6E,EAAA,EAAA7E,CAAA,GACKR,EAAOyC,0CAKF,IN3CKxD,EM2CLqG,EAAAlJ,KAENmJ,EJYL,SAA6B7D,EAAQjC,GACxC,IAAMmC,EAAY,CAAC,GAAG3D,IAAI,SAAA8D,GACtB,OAAOD,EAAiBJ,KAEtB8D,EAAO,CAAC,SAAU,SAAU,SAAU,SAAU,UAClDC,EAAY/D,EAAOgE,OAAO,SAACC,EAAKC,EAAO7D,GACvC,OAAOvB,OAAAqF,EAAA,EAAArF,CAAA,GACAmF,EADPnF,OAAA6E,EAAA,EAAA7E,CAAA,GAGKgF,EAAKzD,GAAK6D,KAEhB,IAGH,OAFkB,IAAInE,EAAQhC,EAAUgG,EAAW5D,EAAiBD,GIxB9CkE,CADLtF,OAAOgF,KAAKpJ,KAAKX,OAAOsK,OAAO,SAAAlC,GAAG,OAAKA,EAAImC,WAAW,cAAa/H,IAAI,SAAA4F,GAAG,OAAIyB,EAAK7J,MAAMoI,KAC5CzH,KAAKX,MAAMwK,UACrEd,QAAQC,IAAI,kBAAmBG,IN9ChBtG,EM+CJsG,EN9CRrG,IAAMgH,KAAK,gDAAiDjH,IM+C1DY,KAAK,SAACsG,GACH,IAAIhJ,EAAKgJ,EAAQC,KAAKC,IACtBf,EAAKjH,MAAMiI,QAAQC,KAAnB,mBAAArJ,OAA2CC,uCAM9C,IAAAqJ,EAAApK,KAEL,OAEIE,EAAAC,EAAAC,cAACe,EAAD,KACIjB,EAAAC,EAAAC,cAACiK,EAAA,EAAD,CAAehK,UAAU,eACrBH,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CAEIkC,QAAQ,UACR9J,QAAS,kBAAM4J,EAAKvK,SAAS,CAAE8I,WAAW,MAH9C,SAQAzI,EAAAC,EAAAC,cAACmK,EAAD,CACI5C,KAAM3H,KAAKX,MAAMsJ,UACjBN,OAfC,kBAAM+B,EAAKvK,SAAS,CAAE8I,WAAW,QAmB1CzI,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SACNzB,EAAAC,EAAAC,cAACoC,EAAD,CAAeF,KAAK,mBAK5BpC,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SACNzB,EAAAC,EAAAC,cAAA,0SACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAFJ,+WAIIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAKZF,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SAGVzB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACoK,EAAD,CAAOlE,SAAUtG,KAAKyI,aAActC,YAAY,WAAW9F,UAAU,mBAAmBiC,KAAK,oBAC7FpC,EAAAC,EAAAC,cAAA,YAGJF,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,UAKdzB,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SAGVzB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACL4G,EAAM1G,IAAI,SAACS,EAAMqD,GAAP,OACPzF,EAAAC,EAAAC,cAACoK,EAAD,CAAOlE,SAAU8D,EAAK3B,aAAcpI,UAAU,mBAAmBiC,KAAI,cAAAxB,OAAgB6E,EAAI,GAAKQ,YAAaR,OAKnHzF,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,UAKdzB,EAAAC,EAAAC,cAACqK,EAAD,CAAanI,KAAK,OAAOmE,WAAW,QAAQjG,QAASR,KAAK0I,sBA7G9CxH,qBCQbwJ,MArBf,SAAczI,GAEV,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYsK,IAAK1I,EAAM2I,SAG1C1K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBU,GAAG,gBAAgBP,QAASyB,EAAMzB,SAASN,EAAAC,EAAAC,cAAA,KAAGsC,MAAM,qBAAvF,0BACAxC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoK,EAAD,CAAOlE,SAAUrE,EAAMwG,aAAcpI,UAAU,mBAAmBiC,KAAML,EAAM4I,OAAOjH,KAAMuC,YAAalE,EAAM6I,cAC9G5K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeG,QAASyB,EAAM8I,SAAS7K,EAAAC,EAAAC,cAAA,KAAGsC,MAAM,iBAAlE,mBCbT,SAASsI,EAAS/I,GACvB,OACE/B,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,KAEED,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAK4F,MAAN,CAAYC,UAAU,6BAA6B3F,UAAU,YAC3DH,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAK8F,QAAN,CAAcgF,GAAG,SAAS5E,MAAOpE,EAAMoE,MAAOC,SAAUrE,EAAMqE,UAC3DrE,EAAMiJ,QAAQrJ,IAAI,SAACsJ,EAAQxF,GAAT,OACjBzF,EAAAC,EAAAC,cAAA,UAAQqH,IAAG,GAAA3G,OAAKqK,EAAL,KAAArK,OAAe6E,IAAMwF,EAAhC,UAUL,SAASC,EAAiBnJ,GAAO,IAC9BoJ,EAA6BpJ,EAA7BoJ,OAAQC,EAAqBrJ,EAArBqJ,QAASC,EAAYtJ,EAAZsJ,QACzB,OACErL,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACRzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,kCAGtBF,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACRzB,EAAAC,EAAAC,cAAC4K,EAAaK,IAGhBnL,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACRzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,yCAGtBF,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACRzB,EAAAC,EAAAC,cAAC4K,EAAaM,IAGhBpL,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACRzB,EAAAC,EAAAC,cAAC4K,EAAaO,8BC/BTC,OAVf,SAAuBvJ,GACnB,OACI/B,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CAAQE,UAAU,gBAAgBG,QAAS,WAAQyB,EAAMzB,YACrDN,EAAAC,EAAAC,cAAA,KAAGsC,MAAOT,EAAM5B,cCFfqL,GAAb,SAAAC,GACI,SAAAD,EAAYzJ,GAAO,IAAArC,EAAA,OAAAwE,OAAAC,EAAA,EAAAD,CAAApE,KAAA0L,IACf9L,EAAAwE,OAAA0C,EAAA,EAAA1C,CAAApE,KAAAoE,OAAA2C,EAAA,EAAA3C,CAAAsH,GAAA1E,KAAAhH,KAAMiC,KAGD5C,MAAQ,GAJEO,EADvB,OAAAwE,OAAAmD,EAAA,EAAAnD,CAAAsH,EAAAC,GAAAvH,OAAAoD,EAAA,EAAApD,CAAAsH,EAAA,EAAAjE,IAAA,SAAApB,MAAA,WAYQ,OACInG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAAC4K,EAAD,CAAUE,QAASlL,KAAKiC,MAAMiJ,QAAS7E,MAAOrG,KAAKiC,MAAMiD,MAAOoB,SAAUtG,KAAKiC,MAAMqE,aAI7FpG,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACwL,GAAD,CAAevL,UAAU,eAAeG,QAASR,KAAKiC,MAAM4J,SAGhE3L,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBL,KAAKiC,MAAMoE,QAGhDnG,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACwL,GAAD,CAAevL,UAAU,cAAcG,QAASR,KAAKiC,MAAM6J,cA9BnFJ,EAAA,CAAkCxK,aAwC3B,SAAS6K,GAAc9J,GAC1B,OACI/B,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACwL,GAAD,CAAevL,UAAU,eAAeG,QAASyB,EAAM4J,SAG3D3L,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB4B,EAAMqD,OAAvC,MAGJpF,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACwL,GAAD,CAAevL,UAAU,cAAcG,QAASyB,EAAM6J,SC3D/D,SAASE,GAAQC,GAAa,QAAAC,EAAAC,UAAAzE,OAAN0E,EAAM,IAAAC,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAANF,EAAME,EAAA,GAAAH,UAAAG,GACjC,OAAO,WAAa,QAAAC,EAAAJ,UAAAzE,OAAT8E,EAAS,IAAAH,MAAAE,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,GAAAN,UAAAM,GAChBR,EAAES,WAAF,EAAMN,EAANtL,OAAe0L,KCOvB,IAAIpD,GAAO,CAAC,SAAU,SAAU,SAAU,SAAU,UAC9CuD,GAAwB,sFA8CfC,OA5Cf,SAAiB3K,GACb,OACI/B,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GAIXY,EAAMsD,QAAQ1D,IAAI,SAACgJ,EAAQlF,GACxB,IAAIiF,EAAQ+B,GAKZ,OAJI9B,EAAOhH,UACP+G,EAAQC,EAAOhH,SAIf3D,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAACyM,EAAD,CAAM9B,QAASiB,GAAQ/J,EAAM8I,QAASF,GAASA,OAAQA,EAAQC,YAAanF,EAAG8C,aAAcxG,EAAMwG,aAAcmC,MAAOA,EAAOpK,QAAS,kBAAMyB,EAAM6K,WAAWd,GAAQ/J,EAAM8K,eAAgBlC,QAGjM3K,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACLyH,GAAKvH,IAAI,SAAA4F,GAAG,OAERvH,EAAAC,EAAAC,cAACoK,EAAD,CAAOlI,KAAML,EAAM+K,UAAUvF,GAAMlB,SAAS,gBAKrDrG,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACLyH,GAAKvH,IAAI,SAAA4F,GACN,IAAMwF,EAAYjB,GAAQ/J,EAAMiL,QAASrC,EAAQpD,EAAKoD,EAAOpD,GAAO,GAC9D0F,EAAYnB,GAAQ/J,EAAMiL,QAASrC,EAAQpD,EAAKoD,EAAOpD,GAAO,GACpE,OAAQvH,EAAAC,EAAAC,cAAC2L,GAAD,CAAezG,OAAQuF,EAAOpD,GAAMqE,KAAMmB,EAAWpB,MAAOsB,YC0NrFC,eAxPX,SAAAA,EAAYnL,GAAO,IAAArC,EAAA,OAAAwE,OAAAC,EAAA,EAAAD,CAAApE,KAAAoN,IACfxN,EAAAwE,OAAA0C,EAAA,EAAA1C,CAAApE,KAAAoE,OAAA2C,EAAA,EAAA3C,CAAAgJ,GAAApG,KAAAhH,KAAMiC,KAEDwG,aAAe7I,EAAK6I,aAAavB,KAAlB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACpBA,EAAKyN,iBAAmBzN,EAAKyN,iBAAiBnG,KAAtB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACxBA,EAAKkN,WAAalN,EAAKkN,WAAW5F,KAAhB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAClBA,EAAK0N,cAAgB1N,EAAK0N,cAAcpG,KAAnB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACrBA,EAAK2N,aAAe3N,EAAK2N,aAAarG,KAAlB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACpBA,EAAK4N,UAAY5N,EAAK4N,UAAUtG,KAAf9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAGjBA,EAAKP,MAAQ,CACTwD,QAAS,IAZEjD,mFAkBfI,KAAKyN,4CAKC,IAAAvE,EAAAlJ,KACNgD,EAAShD,KAAK0N,gBACTjK,KAAK,SAACsG,GACHb,EAAKrJ,SAAS,CACVgD,QAASkH,EAAQC,8CAMpBpB,GAAO,IAAAC,EACQD,EAAME,OAAtBlF,EADQiF,EACRjF,KAAMyC,EADEwC,EACFxC,MACd0C,QAAQC,IAAI,+BAAgCpF,EAAMyC,GAClD,IAAIsH,EAASvJ,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ0C,SACjCsI,EAAM7N,KAAKX,MAAMwD,QAAQ0C,QAAQ3B,GACnCkK,EAAK1J,OAAAqF,EAAA,EAAArF,CAAA,GACFyJ,EADE,CAELjK,KAAMyC,IAGVsH,EAAU/J,GAAQkK,EAClB,IAAMC,EAAU3J,OAAAqF,EAAA,EAAArF,CAAA,GACTpE,KAAKX,MAAMwD,QADF,CAEZ0C,QAASoI,IAEb3N,KAAKH,SAAS,CACVgD,QAASkL,+CAIE,IAAA3D,EAAApK,KAETe,EAAKf,KAAK0N,eAGhB9K,EAFgB5C,KAAKX,MAAMwD,QAEX9B,GAAI0C,KAAK,WACrB2G,EAAKnI,MAAMiI,QAAQC,KAAnB,qBAAArJ,OAA6CC,gDAYnC8J,EAAQ3F,EAAOmB,GAC7B0C,QAAQC,IAAI,uBAAwB,UAAW6B,EAAQ,SAAU3F,EAAO,SAAUmB,GAGlF,IAFA,IAAMtF,EAAKf,KAAK0N,eACZM,EAAc5J,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ0C,SACnCI,EAAI,EAAGA,EAAI3F,KAAKX,MAAMwD,QAAQ0C,QAAQmC,OAAQ/B,IACnD,GAAIkF,IAAW7K,KAAKX,MAAMwD,QAAQ0C,QAAQI,GAAI,CAC1CoD,QAAQC,IAAI,yBACZ,IAAI6E,EAAM7N,KAAKX,MAAMwD,QAAQ0C,QAAQI,GACjCmI,EAAK1J,OAAAqF,EAAA,EAAArF,CAAA,GACFyJ,EADEzJ,OAAA6E,EAAA,EAAA7E,CAAA,GAEJc,EAAQmB,IAUb2H,EAAerI,GAAKmI,EACpB,IAAMjL,EAAU7C,KAAKX,MAAMwD,QACrBoL,EAAsB,IAAI5I,EAAQxC,EAAQe,KAAMf,EAAQyC,OAAQ0I,EAAgBnL,EAAQ2C,WAC9F5C,EAAOqL,EAAqBlN,GAC5Bf,KAAKH,SAAS,CACVgD,QAASoL,2CAMXpD,EAAQqD,GAClBnF,QAAQC,IAAI,eAAgB6B,EAAQ,OAAQqD,GAG5C,IAFA,IAAMnN,EAAKf,KAAK0N,eACZC,EAASvJ,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ0C,SAC9BI,EAAI,EAAGA,EAAI3F,KAAKX,MAAMwD,QAAQ0C,QAAQmC,OAAQ/B,IACnD,GAAIkF,IAAW7K,KAAKX,MAAMwD,QAAQ0C,QAAQI,GAAI,CAC1C,IAAIkI,EAAM7N,KAAKX,MAAMwD,QAAQ0C,QAAQI,GACjCmI,EAAK1J,OAAAqF,EAAA,EAAArF,CAAA,GACFyJ,EADE,CAELhK,QAASqK,IAEbP,EAAUhI,GAAKmI,EACf,IAAMjL,EAAU7C,KAAKX,MAAMwD,QACrBsL,EAAuB,IAAI9I,EAAQxC,EAAQe,KAAMf,EAAQyC,OAAQqI,EAAW9K,EAAQ2C,WAC1FuD,QAAQC,IAAI,2BAA4BmF,GACxCvL,EAAOuL,EAAsBpN,GAC7Bf,KAAKH,SAAS,CACVgD,QAASsL,0CAOZtD,GACT,IAAM9J,EAAKf,KAAK0N,eACZC,EAASvJ,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ0C,SACvCwD,QAAQC,IAAI,2BAA4B6B,GACxC,IAAK,IAAIlF,EAAI,EAAGA,EAAI3F,KAAKX,MAAMwD,QAAQ0C,QAAQmC,OAAQ/B,IACnD,GAAIkF,IAAW7K,KAAKX,MAAMwD,QAAQ0C,QAAQI,GAAI,CAE1CgI,EAAUS,OAAOzI,EAAG,GACpB,IAAM9C,EAAU7C,KAAKX,MAAMwD,QACrBwL,EAAS,IAAIhJ,EAAQxC,EAAQe,KAAMf,EAAQyC,OAAQqI,EAAW9K,EAAQ2C,WAC5E5C,EAAOyL,EAAQtN,GACfgI,QAAQC,IAAI,mBACZhJ,KAAKH,SAAS,CACVgD,QAASwL,yCAOrB,IAAMtN,EAAKf,KAAK0N,eACZC,EAASvJ,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ0C,SACvCwD,QAAQC,IAAI,yBACZ,IAAIsF,EAAiB,IAAI3K,EAAO,mBAAoB,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,IACzEgK,EAAUxD,KAAKmE,GACfvF,QAAQC,IAAI,sBAAuB2E,GACnC,IAAM9K,EAAU7C,KAAKX,MAAMwD,QACrBwL,EAAS,IAAIhJ,EAAQxC,EAAQe,KAAMf,EAAQyC,OAAQqI,EAAW9K,EAAQ2C,WAC5E5C,EAAOyL,EAAQtN,GACfgI,QAAQC,IAAI,2BACZhJ,KAAKH,SAAS,CACVgD,QAASwL,2CAUb,IAAMH,EAAM1O,OAAOwB,SAASC,SACtB6J,EAAcoD,EAAIK,QAAQ,WAC1BC,EAAcN,EAAIO,UAAU3D,GAGlC,OAFW0D,EAAYC,UAAUD,EAAYD,QAAQ,KAAO,sCAUrDjB,GACP9N,OAAOkP,WAAWC,iBACd,CACIC,WAAY,aACZC,cAAe,WACfC,wBAAyB,CAAEvP,MAAO,IAAKwP,OAAQ,IAAKC,KAAM,OAC1DC,UAAU,EACVC,qBAAsB,CAAC,MAAO,MAAO,QACrCC,YAAa,KACbC,cAAe,IACfC,eAAgB,IAChBC,cAAe,IACfC,eAAgB,KAEpB,SAAUC,EAAOC,GAEb,GADA1G,QAAQC,IAAIyG,GACS,YAAjBA,EAAO7G,MAAqB,CAC5B,IAAI8G,EAASD,EAAOE,KAAKC,cACzB7G,QAAQC,IAAI,mBAAoB0G,GAChCpC,EAAcoC,uCAYrB,IAAAG,EAAA7P,KAEC6C,EAAU7C,KAAKX,MAAMwD,QAC3B,OAAKA,EAKD3C,EAAAC,EAAAC,cAACe,EAAD,KAEIjB,EAAAC,EAAAC,cAAC0P,GAAD,CAASvK,QAAS1C,EAAQ0C,QAAU1C,EAAQ0C,QAAU,GAClDyH,UAAWnK,EAAQyC,OAASzC,EAAQyC,OAAS,GAC7C4H,QAAS,SAACrC,EAAQ3F,EAAOmB,GAAYwJ,EAAKE,kBAAkBlF,EAAQ3F,EAAOmB,IAC3E0G,eAAgB,SAAClC,EAAQqD,GAAU2B,EAAKvC,cAAczC,EAAQqD,IAC9DzF,aAAczI,KAAKyI,aACnBuH,YAAahQ,KAAKX,MAClByN,WAAY9M,KAAK8M,WACjB/B,QAAS,SAACF,GAAagF,EAAKtC,aAAa1C,MAG7C3K,EAAAC,EAAAC,cAAA,UAAQI,QAASR,KAAKwN,WAAtB,sBAEAtN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqK,EAAD,CAAapK,UAAU,iBAAiBiC,KAAK,eAAe9B,QAASR,KAAKqN,mBAC1EnN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAxBIF,EAAAC,EAAAC,cAAA,mBAxNMc,aCcX+O,8MAjBX5Q,MAAQ,CACJwD,QAAS,4EAMT,OAFAkG,QAAQC,IAAI,yBAA0BhJ,KAAKX,MAAMwD,QAAQ0C,SAGrDrF,EAAAC,EAAAC,cAACe,EAAD,KACIjB,EAAAC,EAAAC,cAAC8P,GAAD,CAAahG,QAASlK,KAAKiC,MAAMiI,kBAVdhJ,iCC8UpBiP,uBAnUX,SAAAA,EAAYlO,GAAO,IAAArC,EAAA,OAAAwE,OAAAC,EAAA,EAAAD,CAAApE,KAAAmQ,IACfvQ,EAAAwE,OAAA0C,EAAA,EAAA1C,CAAApE,KAAAoE,OAAA2C,EAAA,EAAA3C,CAAA+L,GAAAnJ,KAAAhH,KAAMiC,KAEDmO,mBAAqBxQ,EAAKwQ,mBAAmBlJ,KAAxB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAC1BA,EAAKyQ,kBAAoBzQ,EAAKyQ,kBAAkBnJ,KAAvB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACzBA,EAAK0Q,kBAAoB1Q,EAAK0Q,kBAAkBpJ,KAAvB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACzBA,EAAK2Q,mBAAqB3Q,EAAK2Q,mBAAmBrJ,KAAxB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAC1BA,EAAK4Q,mBAAqB5Q,EAAK4Q,mBAAmBtJ,KAAxB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAC1BA,EAAK6Q,qBAAuB7Q,EAAK6Q,qBAAqBvJ,KAA1B9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAC5BA,EAAK8Q,uBAAyB9Q,EAAK8Q,uBAAuBxJ,KAA5B9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAC9BA,EAAK+Q,iBAAmB/Q,EAAK+Q,iBAAiBzJ,KAAtB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACxBA,EAAKgR,eAAiBhR,EAAKgR,eAAe1J,KAApB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IACtBA,EAAKiR,YAAcjR,EAAKiR,YAAY3J,KAAjB9C,OAAA+C,EAAA,EAAA/C,CAAAxE,IAEnBA,EAAKP,MAAQ,CACTwD,QAAS,KACTiO,cAAe,GAhBJlR,mFAqBfI,KAAKyN,4CAGC,IAAAvE,EAAAlJ,KACNgD,EAAShD,KAAK0N,gBACTjK,KAAK,SAACsG,GACHb,EAAKrJ,SAAS,CACVgD,QAASkH,EAAQC,gDAM7B,IAAMkE,EAAM1O,OAAOwB,SAASC,SACtB6P,EAAgB5C,EAAIK,QAAQ,aAC5BwC,EAAgB7C,EAAIO,UAAUqC,GAGpC,OAFWC,EAActC,UAAUsC,EAAcxC,QAAQ,KAAO,6CAKlDyC,EAAQC,EAAQ5K,GAC9B0C,QAAQC,IAAIgI,EAAQC,EAAQ5K,GAC5B,IAAIxD,EAAU7C,KAAKX,MAAMwD,QACrBkL,EAAanL,KAAOC,EAAS,CAC7B2C,UAAUpB,OAAA6E,EAAA,EAAA7E,CAAA,GACLpE,KAAKX,MAAMyR,cACZ,CACIjM,UAAUT,OAAA6E,EAAA,EAAA7E,CAAA,GACL4M,EACD,CACIhM,SAASZ,OAAA6E,EAAA,EAAA7E,CAAA,GACJ6M,EACG,CAAE9L,OAAQ,CAAE+L,KAAM7K,WAO9CrG,KAAKH,SAAS,CACVgD,QAASkL,+CAIEiD,EAAQC,EAAQrI,GAC/BG,QAAQC,IAAIgI,EAAQC,EAAQrI,GADU,IAAAC,EAEdD,EAAME,OAAtBlF,EAF8BiF,EAE9BjF,KAAMyC,EAFwBwC,EAExBxC,MAEd0C,QAAQC,IAAI,cAAe,QAASpF,EAAM,SAAUyC,GACpD,IAAIxD,EAAU7C,KAAKX,MAAMwD,QACrBkL,EAAanL,KAAOC,EAAS,CAC7B2C,UAAUpB,OAAA6E,EAAA,EAAA7E,CAAA,GACLpE,KAAKX,MAAMyR,cACZ,CACIjM,UAAUT,OAAA6E,EAAA,EAAA7E,CAAA,GACL4M,EACD,CACIhM,SAASZ,OAAA6E,EAAA,EAAA7E,CAAA,GACJ6M,EACG,CAAE/L,MAAO,CAAEgM,KAAM7K,WAO7CrG,KAAKH,SAAS,CACVgD,QAASkL,8CAICiD,EAAQC,EAAQrI,GAC9BG,QAAQC,IAAIgI,EAAQC,EAAQrI,GADS,IAAAuI,EAEbvI,EAAME,OAAtBlF,EAF6BuN,EAE7BvN,KAAMyC,EAFuB8K,EAEvB9K,MAEd0C,QAAQC,IAAI,cAAe,QAASpF,EAAM,SAAUyC,GACpD,IAAIxD,EAAU7C,KAAKX,MAAMwD,QACrBkL,EAAanL,KAAOC,EAAS,CAC7B2C,UAAUpB,OAAA6E,EAAA,EAAA7E,CAAA,GACLpE,KAAKX,MAAMyR,cACZ,CACIjM,UAAUT,OAAA6E,EAAA,EAAA7E,CAAA,GACL4M,EACD,CACIhM,SAASZ,OAAA6E,EAAA,EAAA7E,CAAA,GACJ6M,EACG,CAAE3O,KAAM,CAAE4O,KAAM7K,WAO5CrG,KAAKH,SAAS,CACVgD,QAASkL,+CAIEiD,EAAQpI,GACvBG,QAAQC,IAAIgI,EAAQpI,GADU,IAAAwI,EAENxI,EAAME,OAAtBlF,EAFsBwN,EAEtBxN,KAAMyC,EAFgB+K,EAEhB/K,MAEd0C,QAAQC,IAAI,cAAe,QAASpF,EAAM,SAAUyC,GACpD,IAAIxD,EAAU7C,KAAKX,MAAMwD,QACrBkL,EAAanL,KAAOC,EAAS,CAC7B2C,UAAUpB,OAAA6E,EAAA,EAAA7E,CAAA,GACLpE,KAAKX,MAAMyR,cACZ,CACIjM,UAAUT,OAAA6E,EAAA,EAAA7E,CAAA,GACL4M,EAEG,CAAEjM,SAAU,CAAEmM,KAAM7K,SAMxCrG,KAAKH,SAAS,CACVgD,QAASkL,+CAIEnF,GACfG,QAAQC,IAAIJ,GADU,IAEdvC,EAAUuC,EAAME,OAAhBzC,MAEJxD,EAAU7C,KAAKX,MAAMwD,QACrBkL,EAAanL,KAAOC,EAAS,CAC7B2C,UAAUpB,OAAA6E,EAAA,EAAA7E,CAAA,GACLpE,KAAKX,MAAMyR,cAER,CAAElM,EAAG,CAAEsM,KAAM7K,OAIzBrG,KAAKH,SAAS,CACVgD,QAASkL,iDAKIsD,EAAYzI,GAAO,IAC5BvC,EAAUuC,EAAME,OAAhBzC,MACJxD,EAAU7C,KAAKX,MAAMwD,QACrBkL,EAAanL,KAAOC,EAAS,CAC7B2C,UAAUpB,OAAA6E,EAAA,EAAA7E,CAAA,GACLpE,KAAKX,MAAMyR,cADP1M,OAAA6E,EAAA,EAAA7E,CAAA,GAGEiN,EAAa,CAAEH,KAAM7K,OAIpCrG,KAAKH,SAAS,CACVgD,QAASkL,mDAIMnF,GAAO,IAClBvC,EAAUuC,EAAME,OAAhBzC,MACFiL,EAAQtR,KAAKX,MAAMwD,QAAQ2C,UAAU3D,IAAI,SAAC0P,EAAI5L,GAAL,mBAAA7E,OAAwB6E,EAAI,KAAK4I,QAAQlI,GACxF0C,QAAQC,IAAI,SAAU3C,EAAO,SAAUiL,GACvCtR,KAAKH,SAAS,CACViR,cAAeQ,+CAKJ,IAAAlH,EAAApK,KACTe,EAAKf,KAAK0N,eAChB3E,QAAQC,IAAI,gCAAiCjI,GAE7CyQ,EADgBxR,KAAKX,MAAMwD,QACT9B,GAAI0C,KAAK,WACvB2G,EAAKnI,MAAMiI,QAAQC,KAAnB,gDAKJ,IAAMpJ,EAAKf,KAAK0N,eACZ+D,EAAQrN,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ2C,WACtCuD,QAAQC,IAAI,6BAA8BhJ,KAAKX,MAAMyR,eAErDW,EAASrD,OAAOpO,KAAKX,MAAMyR,cAAe,GAC1C,IAAMjO,EAAU7C,KAAKX,MAAMwD,QACrB6O,EAAQ,IAAIrM,EAAQxC,EAAQe,KAAMf,EAAQyC,OAAQzC,EAAQ0C,QAASkM,GACzED,EAASE,EAAO3Q,GAChBgI,QAAQC,IAAI,6BACZhJ,KAAKH,SAAS,CACVgD,QAAS6O,EACTZ,cAAe,0CAKnB,IAAM/P,EAAKf,KAAK0N,eACZ+D,EAAQrN,OAAAwJ,EAAA,EAAAxJ,CAAOpE,KAAKX,MAAMwD,QAAQ2C,WACtCuD,QAAQC,IAAI,aAAcyI,GAC1B,IAAInM,EAASlB,OAAOuN,OAAO3R,KAAKX,MAAMwD,QAAQyC,QAC9CyD,QAAQC,IAAI,uBAAwB1D,GACpC,IAAIsM,EAAOlM,EAAiBJ,GAC5ByD,QAAQC,IAAI,QAAS4I,GACrBH,EAAStH,KAAKyH,GACd7I,QAAQC,IAAI,aAAcyI,GAC1B,IAAM5O,EAAU7C,KAAKX,MAAMwD,QACrBgP,EAAe,IAAIxM,EAAQxC,EAAQe,KAAMf,EAAQyC,OAAQzC,EAAQ0C,QAASkM,GAChF1I,QAAQC,IAAI,4BAA6B6I,GACzCL,EAASK,EAAc9Q,GACvBgI,QAAQC,IAAI,wBACZhJ,KAAKH,SAAS,CACVgD,QAASgP,EACTf,cAAee,EAAarM,UAAUkC,OAAS,qCAI9C,IAAAmI,EAAA7P,KAEL,IADgBA,KAAKX,MAAMwD,QAEvB,OAAQ3C,EAAAC,EAAAC,cAAA,YAEZ,IAGM0R,EAAW,CAAEzG,OAHT,CAAEhF,MAAK,aAAAvF,OAAed,KAAKX,MAAMyR,cAAgB,GAAKxK,SAAUtG,KAAK0Q,uBAAwBxF,QAASlL,KAAKX,MAAMwD,QAAQ2C,UAAU3D,IAAI,SAACkQ,EAAWpM,GAAZ,mBAAA7E,OAA+B6E,EAAI,MAGtJ2F,QAFnB,CAAEjF,MAAOrG,KAAKX,MAAMwD,QAAQ2C,UAAUxF,KAAKX,MAAMyR,eAAexM,OAAQgC,SAAU0F,GAAQhM,KAAKyQ,qBAAsB,UAAWvF,QAAS9G,OAAOuN,OAAO3R,KAAKX,MAAMwD,QAAQyC,SAE1IiG,QADhC,CAAElF,MAAOrG,KAAKX,MAAMwD,QAAQ2C,UAAUxF,KAAKX,MAAMyR,eAAevM,OAAQ+B,SAAU0F,GAAQhM,KAAKyQ,qBAAsB,UAAWvF,QAAS9G,OAAOuN,OAAO3R,KAAKX,MAAMwD,QAAQyC,UAG/K0M,EAAWhS,KAAKX,MAAMwD,QAAQ2C,UAAUkC,OAAS,EAEvD,OACIxH,EAAAC,EAAAC,cAACe,EAAD,KACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACgL,EAAqB0G,GACtB5R,EAAAC,EAAAC,cAACmB,EAAD,KAEIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SACNzB,EAAAC,EAAAC,cAAA,SAAO6R,IAAI,gBAAgB5R,UAAU,eAAcH,EAAAC,EAAAC,cAAA,6BACnDF,EAAAC,EAAAC,cAACoK,EAAD,CAAOnK,UAAU,gBAAgBiC,KAAMtC,KAAKX,MAAMwD,QAAQ2C,UAAUxF,KAAKX,MAAMyR,eAAelM,EAAG0B,SAAUtG,KAAKwQ,qBAChHtQ,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACVzB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAaG,QAASR,KAAK6Q,aAAa3Q,EAAAC,EAAAC,cAAA,KAAGsC,MAAM,gBAAnE,0BAEAxC,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAAA,UAAQmG,UAAWyL,EAAS3R,UAAU,eAAeG,QAASR,KAAK4Q,gBAAgB1Q,EAAAC,EAAAC,cAAA,KAAGsC,MAAM,iBAA5F,qBAKZxC,EAAAC,EAAAC,cAAA,WAGIJ,KAAKX,MAAMwD,QAAQ2C,UAAUxF,KAAKX,MAAMyR,eAAejM,UAAUhD,IAAI,SAACkD,EAAUY,GAAX,OACjEzF,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GACZnB,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SACNzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,wBAAgBuF,EAAI,IACxCzF,EAAAC,EAAAC,cAACoK,EAAD,CAAOlI,KAAMyC,EAASA,SAAUuB,SAAU0F,GAAQ6D,EAAKU,mBAAoB5K,OAInFzF,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,SACNzB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,yBAAiBuF,EAAI,IACzCzF,EAAAC,EAAAC,cAACoK,EAAD,CAAOlI,KAAMyC,EAASC,SAAS,GAAG1C,KAAMgE,SAAU0F,GAAQ6D,EAAKS,kBAAmB3K,EAAG,OAI7FzF,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAAC8R,GAAD,CAAc5P,KAAK,gBAAgB4I,QAAS9G,OAAOuN,OAAO9B,EAAKxQ,MAAMwD,QAAQyC,QAASe,MAAOtB,EAASC,SAAS,GAAGG,OAAQD,MAAOH,EAASC,SAAS,GAAGE,MAAOoB,SACzJ,SAACD,GAAD,OAAWwJ,EAAKO,mBAAmBzK,EAAG,EAAGU,IAAQyF,KAAME,GAAQ6D,EAAKQ,kBAAmB1K,EAAG,EAAGZ,EAASC,SAAS,GAAGG,OAAS,GAAI0G,MAAOG,GAAQ6D,EAAKQ,kBAAmB1K,EAAG,EAAGZ,EAASC,SAAS,GAAGG,OAAS,MAGlNjF,EAAAC,EAAAC,cAACqB,EAAD,CAAKE,KAAK,QACNzB,EAAAC,EAAAC,cAAC8R,GAAD,CAAc5P,KAAK,gBAAgB4I,QAAS9G,OAAOuN,OAAO9B,EAAKxQ,MAAMwD,QAAQyC,QAASe,MAAOtB,EAASC,SAAS,GAAGG,OAC9GD,MAAOH,EAASC,SAAS,GAAGE,MAAOoB,SAC/B,SAACD,GAAD,OAAWwJ,EAAKO,mBAAmBzK,EAAG,EAAGU,IAAQyF,KAAME,GAAQ6D,EAAKQ,kBAAmB1K,EAAG,EAAGZ,EAASC,SAAS,GAAGG,OAAS,GAAI0G,MAAOG,GAAQ6D,EAAKQ,kBAAmB1K,EAAG,EAAGZ,EAASC,SAAS,GAAGG,OAAS,OAI1NjF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAMZF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqK,EAAD,CAAapK,UAAU,iBAAiBiC,KAAK,OAAO9B,QAASR,KAAK2Q,mBAClEzQ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBA5TmBc,cCQpBiR,8MAjBX9S,MAAQ,CACJwD,QAAS,4EAMT,OACI3C,EAAAC,EAAAC,cAACe,EAAD,KACIjB,EAAAC,EAAAC,cAACgS,GAAD,CAAsBlI,QAASlK,KAAKiC,MAAMiI,kBAVrBhJ,aCsCtBmR,oLA3BP,OADAtJ,QAAQC,IAAI,2BAA4BxJ,OAAOwB,SAASC,UAEpDf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVb,OAAOwB,SAASC,WAAhB,GAAAH,OAAgC4C,wBAAhC,KACGxD,EAAAC,EAAAC,cAACkS,EAAD,CAAcnP,MAAOnD,KAAKiC,MAAMsQ,iBAChC,KACH/S,OAAOwB,SAASC,WAAhB,GAAAH,OAAgC4C,wBAAhC,WACGxD,EAAAC,EAAAC,cAACoS,EAAD,CAAetI,QAASlK,KAAKiC,MAAMiI,UACnC,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,oBACGxD,EAAAC,EAAAC,cAACqS,GAAD,CAAsBvI,QAASlK,KAAKiC,MAAMiI,UAC1C,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,sBACGxD,EAAAC,EAAAC,cAACsS,GAAD,CAAwBxI,QAASlK,KAAKiC,MAAMiI,UAC5C,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,mBACGxD,EAAAC,EAAAC,cAAC8P,GAAD,CAAayC,YAAa3S,KAAKiC,MAAM0Q,YAAazI,QAASlK,KAAKiC,MAAMiI,UACtE,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,qBACGxD,EAAAC,EAAAC,cAACgS,GAAD,CAAsBlI,QAASlK,KAAKiC,MAAMiI,UAC1C,aA1BEhJ,aCmBP0R,oLAnBF,IAAAhT,EAAAI,KACL,OACIE,EAAAC,EAAAC,cAAEe,EAAF,CAAYE,OAAK,GACbnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,KAAI,6BAAAxB,OAA+Bd,KAAKiC,MAAM0Q,YAAYE,aAAtD,OACZ3S,EAAAC,EAAAC,cAACmC,EAAD,CAAWD,KAAK,wDAEpBpC,EAAAC,EAAAC,cAAC0S,GAAD,CAASP,eAAgBvS,KAAKiC,MAAM0Q,YAAYJ,eAAgBQ,UAAW/S,KAAKiC,MAAM0Q,YAAYK,WAClG9S,EAAAC,EAAAC,cAACqK,EAAD,CAAanI,KAAK,cAAc9B,QAAS,kBAAMZ,EAAKqC,MAAMiI,QAAQC,KAAnB,cAC/CjK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBAbIc,aCmCL+R,oLAnCP,OACI/S,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GAEX7B,OAAOwB,SAASC,WAAhB,GAAAH,OAAgC4C,wBAAhC,WACGxD,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GACZnB,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,KAAK,kCACbpC,EAAAC,EAAAC,cAACmC,EAAD,CAAWD,KAAK,sCAChBpC,EAAAC,EAAAC,cAAC0S,GAAD,CAAS5I,QAASlK,KAAKiC,MAAMiI,WAGjC,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,oBACGxD,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GACZnB,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,KAAK,mBAEbpC,EAAAC,EAAAC,cAAC0S,GAAD,CAAS5I,QAASlK,KAAKiC,MAAMiI,WAGjC,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,sBACGxD,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GACZnB,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,KAAK,qBAEbpC,EAAAC,EAAAC,cAAC0S,GAAD,CAAS5I,QAASlK,KAAKiC,MAAMiI,WAGjC,aA5BChJ,aCgCNgS,8MA/BX7T,MAAQ,2EAKJ,OACIa,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GAEX7B,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,mBACGxD,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GACZnB,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,KAAK,iBAEbpC,EAAAC,EAAAC,cAAC0S,GAAD,CAASH,YAAa3S,KAAKiC,MAAM0Q,YAAazI,QAASlK,KAAKiC,MAAMiI,WAGtE,KACH1K,OAAOwB,SAASC,SAAS2I,WAAzB,GAAA9I,OAAuC4C,wBAAvC,qBACGxD,EAAAC,EAAAC,cAACe,EAAD,CAAWE,OAAK,GACZnB,EAAAC,EAAAC,cAACiC,EAAD,CAAQC,KAAK,mBACbpC,EAAAC,EAAAC,cAAC0S,GAAD,CAAS5I,QAASlK,KAAKiC,MAAMiI,WAGjC,aAvBDhJ,aC8DJiS,sNAxDb9T,MAAQ,CACNwT,aAAc,8BACdN,eAAgB,GAChBa,mBAAeC,EACfL,SAAU,uFAIVhT,KAAKsT,oDAGO,IAAApK,EAAAlJ,KACZ8C,IAAMG,IAAI,iDACPQ,KAAK,SAACsG,GACLhB,QAAQC,IAAI,eAAgBe,EAAQC,MAIpC,IAHA,IAAIuI,EAAiB,GACjBgB,EAAgB,GAEX5N,EAAI,EAAGA,EAAIoE,EAAQC,KAAKtC,OAAQ/B,IAAK,CAC5C,IAAI9C,EAAU,CACZU,OAAQwG,EAAQC,KAAKrE,GAAGsE,IACxB5G,SAAU0G,EAAQC,KAAKrE,GAAG/B,MAE5B2P,EAAgB,qBAChBhB,EAAepI,KAAKtH,GAGtBkG,QAAQC,IAAI,oBAAqBuJ,GAEjCrJ,EAAKrJ,SAAS,CACZgT,aAAcU,EACdhB,eAAgBA,EAChBS,SAAUjJ,EAAQC,0CAKjB,IAAAI,EAAApK,KACP,OACEE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQkT,SAAU9P,yBAChBxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqT,EAAD,MACAvT,EAAAC,EAAAC,cAACsT,EAAA,EAAD,KACExT,EAAAC,EAAAC,cAACsT,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAI,IAAOC,OAAQ,SAAC5R,GAAD,OAAW/B,EAAAC,EAAAC,cAAC0T,GAAD1P,OAAAyD,OAAA,GAAW5F,EAAX,CAAkB0Q,YAAavI,EAAK/K,YAC/Ea,EAAAC,EAAAC,cAACsT,EAAA,EAAD,CAAOK,QAAM,EAACH,KAAI,UAAaC,OAAQ,SAAC5R,GAAD,OAAW/B,EAAAC,EAAAC,cAAC4T,GAAD5P,OAAAyD,OAAA,GAAY5F,EAAZ,CAAmB0Q,YAAavI,EAAK/K,YACvFa,EAAAC,EAAAC,cAACsT,EAAA,EAAD,CAAOK,QAAM,EAACH,KAAI,QAAWC,OAAQ,SAAC5R,GAAD,OAAW/B,EAAAC,EAAAC,cAAC6T,GAAD7P,OAAAyD,OAAA,GAAU5F,EAAV,CAAiB0Q,YAAavI,EAAK/K,sBA9C7E6B,cCAEgT,QACW,cAA7B1U,OAAOwB,SAASmT,UAEe,UAA7B3U,OAAOwB,SAASmT,UAEhB3U,OAAOwB,SAASmT,SAASC,MACvB,2DCZNC,IAASR,OAAO3T,EAAAC,EAAAC,cAACkU,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlR,KAAK,SAAAmR,GACjCA,EAAaC","file":"static/js/main.ca612f9f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../style.css\";\n\n\nclass Nav extends Component {\n  // state begins with open set to false and width set to window's width\n  state = {\n    open: false,\n    width: window.innerWidth\n  };\n\n  updateWidth = () => {\n    // newState is whatever width the browser is at\n    const newState = { width: window.innerWidth };\n\n    // set newState's open key to false if conditions met\n    if (this.state.open && newState.width > 991) {\n      newState.open = false;\n    }\n\n    // setting newState of updated browser's width\n    this.setState(newState);\n  };\n\n  // method for toggling hamburger nav on smaller screens\n  toggleNav = () => {\n    this.setState({ open: !this.state.open });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateWidth);\n  }\n\n  render() {\n    return (\n      <nav className=\"appNav navbar sticky-top navbar-expand-lg navbar-light mb-2\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          In Their Shoes\n        </Link>\n        <button\n          // this is for onClick of hamburger\n          onClick={this.toggleNav}\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n        {/* determining if hamburger toggle will open or not */}\n        <div className={`${this.state.open ? \"\" : \"collapse \"}navbar-collapse`} id=\"navbarNav\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}\n                to=\"/\"\n              >\n                Dashboard\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className={window.location.pathname === \"/create\" || \"/create/avatars\" || \"/create/questions\" ? \"nav-link active\" : \"nav-link\"}\n                to={`/create`}\n              >\n                Create\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link\n                onClick={this.toggleNav}\n                className=\"nav-link\"\n                to=\"/\" // TODO: figure out where logout will link to\n              >\n                Logout\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n\n\nexport default Nav;","// import react package\nimport React from \"react\";\n\n// 3 exports\n\n// takes in children passed down from Home/Saved JS pages, the container is set to fluid\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// takes in children passed down from Home/Saved JS pages, the div is set to fluid\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// takes in children passed down from Home/Saved JS pages\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")\n      }\n    >\n      {children}\n    </div>\n  );\n}\n\n\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Tab extends Component {\n    // sets props to required data type\n    static propTypes = {\n        activeTab: PropTypes.string.isRequired,\n        label: PropTypes.string.isRequired,\n        onClick: PropTypes.func.isRequired,\n    };\n\n    // fires on click event, passes \"label\" with onClick\n    onClick = () => {\n        const { label, onClick } = this.props;\n        onClick(label);\n    }\n\n    render() {\n        // declares this to const variables\n        const {\n            onClick,\n            props: {\n                activeTab,\n                label,\n            },\n        } = this;\n\n        // sets class name \n        let className = 'tab-list-item';\n\n        // adds active class to clicked label\n        if (activeTab === label) {\n            className += ' tab-list-active';\n        }\n\n        return (\n            <li\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n            </li>\n        );\n    }\n}\n\n\nexport default Tab;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport '../style.css';\n// import { Container, Row, Col } from '../Grid';\nimport Tab from \"../Tab\";\n\n\nexport function Header(props) {\n    return (\n        <div className=\"text-center\">\n            <h1 className=\"appHeader\">{props.text}</h1>\n        </div>\n    )\n}\n\nexport function SubHeader(props) {\n    return (\n        <div className=\"text-center\">\n            <h5 className=\"appSubHeader\">{props.text}</h5>\n        </div>\n    )\n}\n\nexport function ContentHeader(props) {\n    return (\n        <div>\n            <h3 className=\"appContentHeader\">{props.text}</h3>\n        </div>\n    )\n}\n\n\nexport class Tabs extends Component {\n    // sets the prop to have required Array type (in parent element, it must be passing more than 1 avatar)\n    // static propTypes = {\n    //     children: PropTypes.instanceOf(Array).isRequired,\n    // }\n\n    // inherits props from parent element\n    constructor(props) {\n        super(props);\n\n        // this.props.children[0].props.label = this.props.children[0].props.label.bind(this)\n\n        this.state = {\n            activeTab: [],\n            // activeTab: this.props.label,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            activeTab: this.props.children[0].props.label})\n    }\n\n    // on click, sets state to active tab of clicked tab\n    onClickTabItem = (tab) => {\n        this.setState({ activeTab: tab });\n    }\n\n    render() {\n        const {\n            onClickTabItem,\n            props: {\n                children,\n            },\n            state: {\n                activeTab,\n            }\n        } = this;\n\n        console.log(\"Children: \",  children)\n        console.log(\"STATE\", this.state)\n\n        return (\n            \n            <div className=\"tabs\">\n                <ol className=\"tab-list\">\n                    {children.map((child) => {\n                        const { label } = child.props;\n\n                        return (\n                            <Tab\n                                activeTab={activeTab}\n                                key={label}\n                                label={label}\n                                onClick={onClickTabItem}\n                            />\n                        );\n                    })}\n                </ol>\n                <div className=\"tab-content\">\n                    {children.map((child) => {\n                        if (child.props.label !== activeTab) return undefined;\n                        return child.props.children;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Tabs;\n\n\n\n\n\n\n// export function AvatarHeader(props) {\n//     return (\n//         <Container fluid>\n//             <Row>\n//                 <Col size=\"sm-1\">\n\n//                 </Col>\n\n//                 <Col size=\"sm-2\">\n//                     <p className=\"text-center\">Avatar 1</p>\n//                 </Col>\n\n//                 <Col size=\"sm-2\">\n//                     <p className=\"text-center\">Avatar 2</p>\n//                 </Col>\n\n//                 <Col size=\"sm-2\">\n//                     <p className=\"text-center\">Avatar 3</p>\n//                 </Col>\n\n//                 <Col size=\"sm-2\">\n//                     <p className=\"text-center\">Avatar 4</p>\n//                 </Col>\n\n//                 <Col size=\"sm-2\">\n//                     <p className=\"text-center\">Avatar 5</p>\n//                 </Col>\n\n//                 <Col size=\"sm-1\">\n\n//                 </Col>\n//             </Row>\n//         </Container>\n//     )\n// }","import React from \"react\";\nimport '../style.css';\nimport { Link } from 'react-router-dom';\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nexport function DashControls(props) {\n    if (props.to) {\n        return (\n            <Link to={props.to}><div className=\"thisControls text-center\">\n                <i className={props.class}></i>\n                <p className=\"appControls controlsText\" to={props.to}>{props.text}</ p>\n            </div></Link>\n        )\n    }\n    else {\n        return (\n            <div className=\"thisControls text-center\">\n                <i className={props.class} onClick={props.click}></i>\n                <p className=\"appControls controlsText\">{props.text}</ p>\n            </div>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default DashControls;","//dependencies\nimport axios from \"axios\";\n\nexport function create(gameObj) {\n    return axios.post(\"https://real-life-api.herokuapp.com/api/games\", gameObj)\n}\n\nexport function update(gameObj, id) {\n\n    return axios.put(`https://real-life-api.herokuapp.com/api/games/${id}`, gameObj)\n}\n\nexport function remove(id) {\n\n    axios\n        .delete(`https://real-life-api.herokuapp.com/api/games/${id}`)\n        .then(() => {\n            window.location.pathname = process.env.PUBLIC_URL //\"/\"\n        })\n}\n\nexport function findbyId(id) {\n\n    return axios.get(`https://real-life-api.herokuapp.com/api/games/${id}`)\n\n}\n\n// export function findOne() {\n//     return axios.get\n// }\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from '../Grid'\nimport { ContentHeader } from '../Header'\nimport DashControl from '../DashControls'\nimport '../style.css';\nimport { remove } from '../../utils/lifeAPIController';\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass ContentAdmin extends Component {\n\n    render() {\n\n        return (\n            <Container>\n\n                {this.props.games.map(game => (\n                    <Container>\n                        <Row>\n                            <Col size=\"sm-6\">\n                                <ContentHeader text={game.gameName} />\n                            </Col>\n\n                            <Col size=\"sm-6\">\n                                <DashControl class=\"appControls fas fa-play\" text=\"Play\" to=\"/\" /> {/*TODO: figure out route to play this game */}\n                                <DashControl class=\"appControls fas fa-user\" text=\"Edit\" to={`/edit/avatars/${game.gameId}`} />\n                                <DashControl class=\"appControls fas fa-poll-h\" text=\"Edit\" to={`/edit/questions/${game.gameId}`} />\n                                <DashControl class=\"appControls fas fa-trash\" text=\"Drop\" click={() => { remove(game.gameId) }} />\n                            </Col>\n                            <hr></hr>\n                        </Row>\n                        <hr></hr>\n                    </Container>\n                ))}\n\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default ContentAdmin;","export class Traits {\n    constructor(trait1, trait2, trait3, trait4, trait5) {\n        this.trait1 = trait1\n        this.trait2 = trait2\n        this.trait3 = trait3\n        this.trait4 = trait4\n        this.trait5 = trait5\n    }\n}\n\nexport class Avatar {\n    constructor(name, picture, t1, t2, t3, t4, t5, tracking) {\n        this.name = name\n        this.picture = picture\n        this.trait1 = t1\n        this.trait2 = t2\n        this.trait3 = t3\n        this.trait4 = t4\n        this.trait5 = t5\n        this.tracking = tracking\n    }\n}\n\nexport class Question {\n    constructor(Q, responses, trait1, trait2) {\n        this.Q = Q\n        this.responses = responses\n        this.trait1 = trait1\n        this.trait2 = trait2\n    }\n}\n\nexport class Response {\n    constructor(response, outcomes) {\n        this.response = response\n        this.outcomes = outcomes\n    }\n}\n\nexport class Outcome {\n    constructor(text, trait, amount, upDown) {\n        this.text = text\n        this.trait = trait\n        this.amount = amount\n        this.upDown = upDown\n    }\n}\n\nexport class GameObj {\n    constructor(name, traits, avatars, questions) {\n        this.name = name\n        this.traits = traits\n        this.avatars = avatars\n        this.questions = questions\n    }\n}\n\n\nlet templateAvatars = [new Avatar(\"Name this Avatar\", null, 0, 0, 0, 0, 0, []), new Avatar(\"Name this Avatar\", null, 0, 0, 0, 0, 0, []), new Avatar(\"Name this Avatar\", null, 0, 0, 0, 0, 0, []), new Avatar(\"Name this Avatar\", null, 0, 0, 0, 0, 0, []), new Avatar(\"Name this Avatar\", null, 0, 0, 0, 0, 0, [])]\n\nexport function templateConstructor(traits, gameName) {\n    const questions = [1].map(i => {\n        return templateQuestion(traits)\n    })\n    const keys = [\"trait1\", \"trait2\", \"trait3\", \"trait4\", \"trait5\"]\n    let traitsObj = traits.reduce((obj, thing, i) => {\n        return {\n            ...obj,\n            // whatever we want to add as a key:value\n            [keys[i]]: thing\n        }\n    }, {})\n    let templateObj = new GameObj(gameName, traitsObj, templateAvatars, questions)\n\n    return templateObj\n}\n\n\nexport function templateResponse(traits) {\n    let defaultResponse = new Response(\"Please enter a response here\", [new Outcome(\"Enter an outcome here\", traits[0], 0, \"up\"), new Outcome(\"Enter an outcome here\", traits[0], 0, \"up\")])\n\n    return defaultResponse\n}\n\n\nexport function templateQuestion(traits) {\n    const responses = [1, 2, 3, 4, 5].map(i => {\n\n        return templateResponse(traits)\n    })\n\n    let templateQuestion = new Question(\"Type your question here\", responses, traits[0], traits[1])\n\n    return templateQuestion\n}\n\n","import React from \"react\";\nimport { Container } from \"../Grid\";\nimport Form from 'react-bootstrap/Form';\n\n// We can render all the traits with just one Label, but we'll need to pass all the correct props\n\nfunction Label(props) {\n    return (\n        <Container>\n\n            <Form>\n\n                <Form.Group controlId=\"formBasicEmail\" className=\"thisForm\">\n\n                    <Form.Control className={props.className}\n                        // changed value from props.text to props.traitName @12:40 5/11/19\n                        //change value from props.traitName to props.text @ 10:37 5/28/19 or else everything was \n                        // barf on create questions\n                        type=\"text\" name={props.traitNumber} placeholder={props.text} value={props.text} onChange={props.onChange} disabled={props.disabled} />\n                </Form.Group>\n\n            </Form>\n\n        </Container>\n    )\n}\n\nexport default Label;\n\n\n\n\n","import React from \"react\";\nimport '../style.css';\n\nfunction AdminButton(props) {\n\n    // let className = \"thisButton \" + props.buttonType;\n\n    return (\n        <div className=\"appAdminButton\">\n\n\n            <button className=\"appButton\" buttonType={props.buttonType} onClick={props.onClick}>{props.text}</button>\n        </div>\n\n    )\n}\n\nexport default AdminButton;\n\n\n\n\n\n\n","import React from \"react\"\nimport { Modal, Button } from \"react-bootstrap\"\n\n\n\nlet gettingStartedText = <div> <p className=\"modal=text\">In Their Shoes is a question and response game similar to the game of life designed to be used as a conversation starter for issues around privelge. As a creator, you get to tell the stories YOU want to tell, and show how the decisions we all make in our lives can depend so much on the resources and community available to us.</p>\n\n    <p className=\"modal=text\">The game is centered on 5 <strong>TRAITS</strong>. These traits impact every aspect of the game. For example, in the basic default game, these traits are: <i>Trait1, Trait2, Trait3, Trait4, Trait5</i>.</p>\n\n    <p className=\"modal=text\">As a creator, you decide which traits your game is based on. Once you've decided on your traits, they will become <strong>LOCKED IN</strong>, and the only part of your game you won't be able to edit later.</p></div>\n\nlet avatarText = <div><p className=\"modal=text\">Every <strong>AVATAR</strong> has all 5 traits, but you decide how much based on a scale of 1-20 (where 1 is the lowest and 20 the highest). How much an avatar has of a certain trait affects which responses are available to them at certain questions in the game.</p>\n\n    <p className=\"modal=text\">For example, in the basic default game, an avatar with a low <i>Trait1</i> and medium <i>Trait2</i> might only be able to select 3 of the 5 responses to a question. You are also able to upload an image for each avatar.</p></div>\n\nlet questionText = <div><p className=\"modal=text\"><strong>QUESTIONS</strong> are weighted by 2 traits. These are the traits that determine how many <strong>RESPONSES</strong> a player can select. All avatars are able to select at least the first response, but it would take a high score to be able to select all 5 responses.</p>\n\n    <p className=\"modal=text\">You can create as many or as few questions as you want, but all questions have 5 responses.</p></div>\n\nlet responsesText = <div><p className=\"modal=text\">Every question has 5 <strong>RESPONSES</strong> players can choose in answer to a question. Each response has an <strong>OUTCOME</strong>. Outcomes can either increase or decrease up to 2 of an avatar's traits.</p>\n\n    <p className=\"modal=text\">For example, in the basic default game, a question about attending college might affect an avatar's wealth and education traits by decreasing wealth (<i>hello student loans!</i>) and increasing education.</p></div>\n\nlet endingText = <div><p className=\"modal=text\">Once all the questions have been answered, player's can see how well (or not well) their avatars did compared to others. A great conversation starter!</p></div>\n\nlet instructions = [gettingStartedText, avatarText, questionText, responsesText, endingText]\n\nlet instructionHeaders = [\"Getting Started\", \"Avatars\", \"Questions\", \"Responses\", \"End of the Game\"]\n\n\n\nexport class MyVerticallyCenteredModal extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.nextInstruction = this.nextInstruction.bind(this);\n\n        this.state = {\n            instructionsIndex: 0,\n            instructionHeadersIndex: 0,\n            showNextButton: true\n        }\n    }\n\n    nextInstruction() {\n        if (this.state.instructionsIndex < instructions.length - 1) {\n            let show = this.state.instructionsIndex + 1 < instructions.length - 1\n            this.setState({\n                instructionsIndex: this.state.instructionsIndex + 1,\n                instructionHeadersIndex: this.state.instructionsIndex + 1,\n                showNextButton: show\n            })\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Modal\n                {...this.props}\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\n                        {instructionHeaders[this.state.instructionHeadersIndex]}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>{instructions[this.state.instructionsIndex]}</p>\n                    {this.state.showNextButton ?\n                        <button onClick={this.nextInstruction}>More instructions</button>\n                        : <div></div>}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.props.onHide}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}","import React, { Component } from 'react';\nimport * as constructor from \"../../constructors\"\nimport * as api from \"../../utils/lifeAPIController\"\nimport { Container, Row, Col } from '../Grid'\nimport { ContentHeader } from '../Header'\nimport Label from '../Label'\nimport '../style.css';\nimport AdminButton from '../Button';\nimport { Button, ButtonToolbar } from \"react-bootstrap\"\nimport { MyVerticallyCenteredModal } from \"../Modal\"\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n//Since all of our traits are always in this order, creating an array for easy mapping down in render.\n// Probably not ideal, but it works!\nlet texts = [\"trait1\", \"trait2\", \"trait3\", \"trait4\", \"trait5\"]\n\n// Creating our class and setting the constructor and super constructor. Binding our methods below so they\n// can be easily called from onClick (in theory). Initalizing state to empty so we can update it when needed.\nclass ContentCreate extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleChange = this.handleChange.bind(this);\n        this.buildTraits = this.buildTraits.bind(this);\n\n\n        this.state = {\n            modalShow: false\n        }\n    }\n\n\n\n\n    // Take in the changed value and set state to be that\n    handleChange(event) {\n        const { name, value } = event.target;\n        console.log(\"HELLO FROM HANDLECHANGE\", name, value)\n\n        this.setState({\n            [name]: value\n        })\n    }\n\n    // This method builds our new object using our imported constructors and sends it to the database.\n    buildTraits() {\n        let traits = Object.keys(this.state).filter(key => !key.startsWith(\"GameName\")).map(key => this.state[key])\n        let templateObj = constructor.templateConstructor(traits, this.state.GameName)\n        console.log(\"TEMPLATE OBJECT\", templateObj)\n        api.create(templateObj)\n            .then((results) => {\n                let id = results.data._id\n                this.props.history.push(`/create/avatars/${id}`)\n            }\n            );\n\n    }\n\n    render() {\n        let modalClose = () => this.setState({ modalShow: false })\n        return (\n\n            <Container>\n                <ButtonToolbar className=\"float-right\">\n                    <Button\n\n                        variant=\"primary\"\n                        onClick={() => this.setState({ modalShow: true })}\n                    >\n                        Help!\n        </Button>\n\n                    <MyVerticallyCenteredModal\n                        show={this.state.modalShow}\n                        onHide={modalClose}\n                    />\n                </ButtonToolbar>\n\n                <Row>\n                    <Col size=\"sm-12\">\n                        <ContentHeader text=\"Instructions\" />\n\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col size=\"sm-12\">\n                        <p>First start by naming your unique game. This game is based off of traits, or stats, that weigh the responses and outcomes you will be able to view. The traits below will not be weighed in a particular order when you declare them, however once you hit next, the traits will be locked in.\n                            <br></br>\n                            <br></br>\n                            On the following screens you will be able to edit: the avatars (5 total) and the starting points of their stats based off the traits (min 1, max 20), and the questions (5 total) each being weighed by the current points of the avatar's traits. Each question will have 5 response which will increase or decrease the avatar's stats, as well as have a certain outcome.\n                            <br></br>\n                            <br></br>\n                        </p>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col size=\"sm-3\">\n                    </Col>\n\n                    <Col size=\"sm-6\">\n                        <Label onChange={this.handleChange} traitNumber=\"GameName\" className=\"thisCreateTraits\" text=\" Type Game Name\" />\n                        <hr></hr>\n                    </Col>\n\n                    <Col size=\"sm-3\">\n                    </Col>\n\n                </Row>\n\n                <Row>\n                    <Col size=\"sm-3\">\n                    </Col>\n\n                    <Col size=\"sm-6\">\n                        {texts.map((text, i) => (\n                            <Label onChange={this.handleChange} className=\"thisCreateTraits\" text={`Type Trait ${i + 1}`} traitNumber={i} />\n                            // text={text}\n                        ))}\n                    </Col>\n\n                    <Col size=\"sm-3\">\n                    </Col>\n\n                </Row>\n\n                <AdminButton text=\"Next\" buttonType=\"green\" onClick={this.buildTraits} />\n\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default ContentCreate;","import React from \"react\"\nimport Label from \"../Label\"\n// import { Container, Row, Col} from \"../Grid\"\nimport \"../style.css\"\n\n\nfunction Card(props) {\n\n    return (\n        <div className=\"card mt-10\">\n            <div className=\"imgContainer\">\n                <img className=\"avatarImg\" src={props.image}></img>\n            </div>\n\n            <div className=\"card-body\">\n\n                {/* <button id=\"upload_widget\" onClick={props.onClick} className=\"cloudinary-button\">Upload files</button> */}\n                <div className=\"cloudinary-button\" id=\"upload_widget\" onClick={props.onClick}><i class=\"fas fa-user-edit\"></i> Upload Avatar Picture</div>\n                <br></br>\n                <Label onChange={props.handleChange} className=\"thisCreateTraits\" text={props.avatar.name} traitNumber={props.avatarIndex} />\n                <br></br>\n                <button className=\"removeButton\" onClick={props.remover}><i class=\"fas fa-trash\"></i> Drop Avatar</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport '../style.css';\nimport Form from 'react-bootstrap/Form';\nimport { Container, Row, Col } from '../Grid'\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n// TODO: ADD IN FUNCTION TO LINK TO GAME INSTANCE\n\nexport function Dropdown(props) {\n  return (\n    <Form>\n\n      <Form.Group controlId=\"exampleForm.ControlSelect1\" className=\"thisForm\">\n        <Form.Control as=\"select\" value={props.value} onChange={props.onChange}>\n          {props.options.map((option, i) => (\n            <option key={`${option}_${i}`}>{option} </option>\n          ))}\n        </Form.Control>\n\n      </Form.Group>\n\n    </Form>\n  )\n}\n\nexport function QuestionDropdown(props) {\n  const { qProps, t1Props, t2Props } = props;\n  return (\n    <Container>\n      <Row>\n        <Col size=\"sm-2\">\n          <p className=\"qIns\"><strong>Edit Question:</strong></p>\n        </Col>\n\n        <Col size=\"sm-3\">\n          <Dropdown {...qProps} />\n        </Col>\n\n        <Col size=\"sm-2\">\n          <p className=\"qIns\"><strong>Weighted By Avatar's:</strong></p>\n        </Col>\n\n        <Col size=\"sm-2\">\n          <Dropdown {...t1Props} />\n        </Col>\n\n        <Col size=\"sm-2\">\n          <Dropdown {...t2Props} />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// export default Dropdown;","import React from \"react\";\nimport '../style.css';\nimport Button from 'react-bootstrap/Button';\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nfunction TogglerButton(props) {\n    return (\n        <Button className=\"togglerButton\" onClick={() => { props.onClick() }}>\n            <i class={props.className}></i>\n        </Button>\n    )\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default TogglerButton;","import React, { Component } from \"react\";\nimport '../style.css';\nimport { Row, Col } from '../Grid'\nimport { Dropdown } from '../Dropdown'\nimport TogglerButton from './togglerButton'\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\nexport class PointToggler extends Component {\n    constructor(props) {\n        super(props)\n\n\n        this.state = {\n\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Row>\n                    <Col size=\"sm-6\">\n                        <Dropdown options={this.props.options} value={this.props.trait} onChange={this.props.onChange} />\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col size=\"sm-1\">\n                        <TogglerButton className=\"fas fa-minus\" onClick={this.props.minus} />\n                    </Col>\n\n                    <Col size=\"sm-1\">\n                        <div className=\"thisForm score\">{this.props.value}</div>\n                    </Col>\n\n                    <Col size=\"sm-1\">\n                        <TogglerButton className=\"fas fa-plus\" onClick={this.props.plus} />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\n\n\nexport function PointToggler2(props) {\n    return (\n        <Row>\n            <Col size=\"sm-1\">\n                <TogglerButton className=\"fas fa-minus\" onClick={props.minus} />\n            </Col>\n\n            <Col size=\"sm-1\">\n                <div className=\"thisForm score\">{props.traits} </div>\n            </Col>\n\n            <Col size=\"sm-1\">\n                <TogglerButton className=\"fas fa-plus\" onClick={props.plus} />\n            </Col>\n        </Row>\n    )\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n// export default PointToggler;\n","export function partial(fn, ...args) {\n    return (...rest) => {\n        fn(...args, ...rest)\n    }\n}","import React from \"react\";\nimport { Col, Row, Container } from '../Grid';\nimport { Header, SubHeader } from '../Header';\nimport Card from \"../Card\"\nimport Label from \"../Label\"\nimport { PointToggler2 } from \"../PointToggler\";\nimport { partial } from \"../../utils/partials\"\nimport \"../style.css\"\n\nlet keys = [\"trait1\", \"trait2\", \"trait3\", \"trait4\", \"trait5\"];\nconst temporaryImagesCreate = \"https://res.cloudinary.com/instapotty/image/upload/v1557722385/Life%20Game/Flam.png\"\n\nfunction Avatars(props) {\n    return (\n        <Container fluid>\n            {/* <Header />\n            <SubHeader /> */}\n            {/* Map over the avatars object */}\n            {props.avatars.map((avatar, i) => {\n                let image = temporaryImagesCreate\n                if (avatar.picture) {\n                    image = avatar.picture\n                }\n\n                return (\n                    <Row>\n                        <Col size=\"md-4\">\n                            <Card remover={partial(props.remover, avatar)} avatar={avatar} avatarIndex={i} handleChange={props.handleChange} image={image} onClick={() => props.showWidget(partial(props.pictureUpdater, avatar))} />\n\n                        </Col>\n                        <Col size=\"md-4\">\n                            {keys.map(key =>\n                                // had to change traitName to text for it to show up in the placeholder\n                                (<Label text={props.traitName[key]} disabled=\"disabled\" />)\n                            )}\n\n                        </Col>\n\n                        <Col size=\"md-4\">\n                            {keys.map(key => {\n                                const increment = partial(props.updater, avatar, key, avatar[key] + 1)\n                                const decrement = partial(props.updater, avatar, key, avatar[key] - 1)\n                                return (<PointToggler2 traits={avatar[key]} plus={increment} minus={decrement} />)\n                            })}\n\n                        </Col>\n\n                    </Row>\n                )\n            })}\n        </Container>\n    )\n}\n\n\n\nexport default Avatars;\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { GameObj, Avatar } from \"../../constructors\"\nimport { update, findbyId } from '../../utils/lifeAPIController';\nimport { Container } from '../Grid'\nimport '../style.css';\nimport { Tabs } from \"../Header\"\nimport Avatars from '../Avatars';\nimport AdminButton from '../Button';\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass ContentEdit extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleChange = this.handleChange.bind(this);\n        this.updateAvatarName = this.updateAvatarName.bind(this);\n        this.showWidget = this.showWidget.bind(this);\n        this.updatePicture = this.updatePicture.bind(this);\n        this.removeAvatar = this.removeAvatar.bind(this);\n        this.addAvatar = this.addAvatar.bind(this);\n\n\n        this.state = {\n            gameObj: {}\n        }\n    }\n\n    // Run get game once the component loads\n    componentDidMount() {\n        this.getGame()\n    }\n\n    //Check the URL to grab the ID, then pass that id up to the findbyId to get it from the database.\n    //Save that entire object in state\n    getGame() {\n        findbyId(this.getGameIdUrl())\n            .then((results) => {\n                this.setState({\n                    gameObj: results.data\n                })\n            })\n    }\n\n    // This is so we can grab that value of an updated filed in real time. \n    handleChange(event) {\n        const { name, value } = event.target;\n        console.log(\"HELLO FROM NAME HANDLECHANGE\", name, value)\n        let allNewAvs = [...this.state.gameObj.avatars]\n        const cur = this.state.gameObj.avatars[name];\n        let newAv = {\n            ...cur,\n            name: value\n\n        };\n        allNewAvs[name] = newAv;\n        const newGameObj = {\n            ...this.state.gameObj,\n            avatars: allNewAvs\n        }\n        this.setState({\n            gameObj: newGameObj\n        })\n    }\n\n    updateAvatarName() {\n\n        const id = this.getGameIdUrl();\n        const gameObj = this.state.gameObj\n        //const forRealUpdateAvatar = new GameObj(gameObj.name, gameObj.traits, newAvName, gameObj.questions)\n        update(gameObj, id).then(() => {\n            this.props.history.push(`/create/questions/${id}`)\n        })\n\n    }\n\n\n    // helper method so we can grab the value of the trait that's being edited on each Avatar.\n    // Grab the game ID again so we know which game we're working on. Create a new duplicate array,\n    //called allNewAvTraits. Loop over the original gameObj and compare the current state of Avatr\n    // to each avatar in the original gameObj. When a match is found, set that instance to the variable\n    // cur to represent the current avatar. Spread all the traits in the object, but update the trait\n    // that's been edited by the user. Do this for each avatar trait that's been edited.\n    updateAvatarTrait(avatar, trait, value) {\n        console.log(\"UPDATE AVATAR TRAIT:\", \"AVATAR:\", avatar, \"TRAIT:\", trait, \"VALUE:\", value)\n        const id = this.getGameIdUrl();\n        let allNewAvTraits = [...this.state.gameObj.avatars]\n        for (let i = 0; i < this.state.gameObj.avatars.length; i++) {\n            if (avatar === this.state.gameObj.avatars[i]) {\n                console.log(\"HELLO FROM TRAIT LOOP\")\n                let cur = this.state.gameObj.avatars[i];\n                let newAv = {\n                    ...cur,\n                    [trait]: value\n                };\n                // Now that we have both the current avatar and the traits that have been changed,\n                //set our duplicate array at each trait index to be the newly created trait.\n                // set gameObj to this.state.gameObj so we only have to write all that once. Then make a \n                // new instance of the GameObj class, passing the constructor the name, traits, newly updated \n                // avatar traits, and questions. \n\n                // Send all of that up to the database using our update function, passing it the object we're updating\n                //and its id. Then, update the gameObj in state to be our new object!\n                allNewAvTraits[i] = newAv;\n                const gameObj = this.state.gameObj\n                const forRealUpdateAvatar = new GameObj(gameObj.name, gameObj.traits, allNewAvTraits, gameObj.questions)\n                update(forRealUpdateAvatar, id)\n                this.setState({\n                    gameObj: forRealUpdateAvatar\n                })\n            }\n        }\n    }\n\n    updatePicture(avatar, url) {\n        console.log(\"THIS AVATAR:\", avatar, \"URL:\", url)\n        const id = this.getGameIdUrl();\n        let allNewAvs = [...this.state.gameObj.avatars]\n        for (let i = 0; i < this.state.gameObj.avatars.length; i++) {\n            if (avatar === this.state.gameObj.avatars[i]) {\n                let cur = this.state.gameObj.avatars[i]\n                let newAv = {\n                    ...cur,\n                    picture: url\n                }\n                allNewAvs[i] = newAv\n                const gameObj = this.state.gameObj\n                const newAvatarWithPicture = new GameObj(gameObj.name, gameObj.traits, allNewAvs, gameObj.questions)\n                console.log(\"NEW AVATAR WITH PICTURE:\", newAvatarWithPicture)\n                update(newAvatarWithPicture, id)\n                this.setState({\n                    gameObj: newAvatarWithPicture\n                })\n            }\n        }\n\n    }\n\n    removeAvatar(avatar) {\n        const id = this.getGameIdUrl();\n        let allNewAvs = [...this.state.gameObj.avatars]\n        console.log(\"HELLO FROM REMOVE AVATAR\", avatar)\n        for (let i = 0; i < this.state.gameObj.avatars.length; i++) {\n            if (avatar === this.state.gameObj.avatars[i]) {\n\n                allNewAvs.splice(i, 1);\n                const gameObj = this.state.gameObj\n                const newAvs = new GameObj(gameObj.name, gameObj.traits, allNewAvs, gameObj.questions)\n                update(newAvs, id)\n                console.log(\"UPDATE HAPPENED\")\n                this.setState({\n                    gameObj: newAvs\n                })\n            }\n        }\n    }\n\n    addAvatar() {\n        const id = this.getGameIdUrl();\n        let allNewAvs = [...this.state.gameObj.avatars]\n        console.log(\"HELLO FROM ADD AVATAR\")\n        let templateAvatar = new Avatar(\"Name this Avatar\", null, 0, 0, 0, 0, 0, [])\n        allNewAvs.push(templateAvatar)\n        console.log(\"NEW LIST OF AVATARS\", allNewAvs)\n        const gameObj = this.state.gameObj\n        const newAvs = new GameObj(gameObj.name, gameObj.traits, allNewAvs, gameObj.questions)\n        update(newAvs, id)\n        console.log(\"ADD AVATAR HIT DATABASE\")\n        this.setState({\n            gameObj: newAvs\n        })\n    }\n\n\n\n    //this parses the url and grabs the id from it. It grabs the index of the avatars string\n    //and marks the end of the string, then marks the index of the slash, and grabs the id\n    //from what comes after the slash\n    getGameIdUrl() {\n        const url = window.location.pathname\n        const avatarIndex = url.indexOf(\"avatars\")\n        const fromAvatars = url.substring(avatarIndex)\n        const id = fromAvatars.substring(fromAvatars.indexOf(\"/\") + 1)\n\n        return id\n    }\n\n    ///////////////////////////////////////////////\n    //                                           //\n    //    CLOUDINARY                             // \n    ///////////////////////////////////////////////\n\n    showWidget(updatePicture) {\n        window.cloudinary.openUploadWidget(\n            {\n                cloud_name: \"instapotty\",\n                upload_preset: \"wveqgdsr\",\n                thumbnailTransformation: { width: 200, height: 200, crop: 'fit' },\n                multiple: false,\n                clientAllowedFormats: [\"png\", \"gif\", \"jpeg\"],\n                maxFileSize: 1500000,\n                maxImageWidth: 5000,\n                maxImageHeight: 5000,\n                minImageWidth: 200,\n                minImageHeight: 200\n            },\n            function (error, result) {\n                console.log(result)\n                if (result.event === \"success\") {\n                    let newUrl = result.info.thumbnail_url\n                    console.log(\"NEW PICTURE URL:\", newUrl)\n                    updatePicture(newUrl)\n\n                }\n            }\n        )\n\n    }\n\n    // If gameObj isn't empty (which it will be on first render, in which case just return an empty div),\n    // render the Avatars component, passing it the gameObj that exists in state (unless it's empty, in which case)\n    // just pass an empty array). \n\n    render() {\n\n        const gameObj = this.state.gameObj\n        if (!gameObj) {\n            return (<div></div>)\n        }\n\n        return (\n            <Container>\n\n                <Avatars avatars={gameObj.avatars ? gameObj.avatars : []}\n                    traitName={gameObj.traits ? gameObj.traits : []}\n                    updater={(avatar, trait, value) => { this.updateAvatarTrait(avatar, trait, value) }}\n                    pictureUpdater={(avatar, url) => { this.updatePicture(avatar, url) }}\n                    handleChange={this.handleChange}\n                    passedState={this.state}\n                    showWidget={this.showWidget}\n                    remover={(avatar) => { this.removeAvatar(avatar) }}\n                />\n\n                <button onClick={this.addAvatar}>Add another avatar</button>\n\n                <br></br>\n                <br></br>\n                <br></br>\n                <AdminButton className=\"btn btn-danger\" text=\"Save Avatars\" onClick={this.updateAvatarName} />\n                <br></br>\n                <br></br>\n                <br></br>\n\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default ContentEdit;\n\n\n\n\n\n\n\n\n\n\n\n\n\n/////////\n// TABS STUFF\n\n// UNDER RENDER\n// const domAvatars = this.state.gameObj.avatars || [];\n// console.log(\"DOM Avatars: \", domAvatars)\n\n// let r = [];\n\n// domAvatars.forEach((domAvatar, i) => {\n//     r.push(\n//         <div label={\"Avatar\" + { i }}>\n//             hi\n//             {/* {domAvatar} */}\n//         </div>\n//     )\n// })\n\n// UNDER RETURN\n// domAvatars.forEach((domAvatar, i) => {\n            //     r.push (\n\n            //         <div label=\"Avatar\">\n            //             {domAvatar.name}\n            //         </div>\n            //     )\n            // })\n\n    {/* {r ?\n                    <Tabs>\n                        {r}\n                    </Tabs>\n                    : null} */}\n\n                {/* <Tabs>\n                    <div label=\"Avatar 1\"> \n                        testing blah blah \n                    </div>\n                    <div label=\"Avatar 2\">\n                        More testing\n                    </div>\n                    <div label=\"Avatar 3\">\n                        Hi Carrie\n                    </div>\n                </Tabs> */}\n\n                {/* <Tabs avatars={gameObj.avatars ? gameObj.avatars : []}>\n                   \n                </Tabs> */}","import React, { Component } from 'react';\nimport { Container } from '../Grid'\nimport '../style.css';\nimport ContentEdit from \"../Content/contentEdit\"\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass ContentCreateAvatars extends Component {\n    state = {\n        gameObj: {}\n    }\n\n    render() {\n        console.log(\"CONTENT CREATE AVATARS\", this.state.gameObj.avatars)\n\n        return (\n            <Container>\n                <ContentEdit history={this.props.history} />\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default ContentCreateAvatars;","import React, { Component } from 'react';\nimport { Container, Row, Col } from '../Grid'\nimport Label from '../Label'\nimport { QuestionDropdown } from '../Dropdown'\nimport { PointToggler } from \"../PointToggler\"\nimport '../style.css';\nimport AdminButton from \"../Button\"\nimport { findbyId } from '../../utils/lifeAPIController';\nimport update from \"immutability-helper\"\nimport { partial } from \"../../utils/partials\"\nimport { update as dbUpdate } from \"../../utils/lifeAPIController\"\nimport { GameObj, Response, Outcome, Question, Traits, templateQuestion } from '../../constructors';\nimport { all } from 'q';\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Binding all methods to our ContentEditQuestions class object\nclass ContentEditQuestions extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleOutcomeTrait = this.handleOutcomeTrait.bind(this);\n        this.handleTraitAmount = this.handleTraitAmount.bind(this);\n        this.handleOutcomeText = this.handleOutcomeText.bind(this);\n        this.handleResponseText = this.handleResponseText.bind(this);\n        this.handleQuestionText = this.handleQuestionText.bind(this);\n        this.handleQuestionTraits = this.handleQuestionTraits.bind(this);\n        this.handleQuestionDropdown = this.handleQuestionDropdown.bind(this);\n        this.updateQuestionDb = this.updateQuestionDb.bind(this);\n        this.removeQuestion = this.removeQuestion.bind(this);\n        this.addQuestion = this.addQuestion.bind(this);\n\n        this.state = {\n            gameObj: null,\n            questionIndex: 0\n        }\n    }\n\n    componentDidMount() {\n        this.getGame()\n    }\n\n    getGame() {\n        findbyId(this.getGameIdUrl())\n            .then((results) => {\n                this.setState({\n                    gameObj: results.data\n                })\n            })\n    }\n\n    getGameIdUrl() {\n        const url = window.location.pathname\n        const questionIndex = url.indexOf(\"questions\")\n        const fromQuestions = url.substring(questionIndex)\n        const id = fromQuestions.substring(fromQuestions.indexOf(\"/\") + 1)\n\n        return id\n    }\n\n    handleTraitAmount(rIndex, oIndex, value) {\n        console.log(rIndex, oIndex, value)\n        let gameObj = this.state.gameObj\n        let newGameObj = update(gameObj, {\n            questions: {\n                [this.state.questionIndex]:\n                {\n                    responses: {\n                        [rIndex]:\n                        {\n                            outcomes: {\n                                [oIndex]:\n                                    { amount: { $set: value } }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        this.setState({\n            gameObj: newGameObj\n        })\n    }\n\n    handleOutcomeTrait(rIndex, oIndex, event) {\n        console.log(rIndex, oIndex, event)\n        const { name, value } = event.target\n\n        console.log(\"EVENT STUFF\", \"NAME:\", name, \"VALUE:\", value)\n        let gameObj = this.state.gameObj\n        let newGameObj = update(gameObj, {\n            questions: {\n                [this.state.questionIndex]:\n                {\n                    responses: {\n                        [rIndex]:\n                        {\n                            outcomes: {\n                                [oIndex]:\n                                    { trait: { $set: value } }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        this.setState({\n            gameObj: newGameObj\n        })\n    }\n\n    handleOutcomeText(rIndex, oIndex, event) {\n        console.log(rIndex, oIndex, event)\n        const { name, value } = event.target\n\n        console.log(\"EVENT STUFF\", \"NAME:\", name, \"VALUE:\", value)\n        let gameObj = this.state.gameObj\n        let newGameObj = update(gameObj, {\n            questions: {\n                [this.state.questionIndex]:\n                {\n                    responses: {\n                        [rIndex]:\n                        {\n                            outcomes: {\n                                [oIndex]:\n                                    { text: { $set: value } }\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        this.setState({\n            gameObj: newGameObj\n        })\n    }\n\n    handleResponseText(rIndex, event) {\n        console.log(rIndex, event)\n        const { name, value } = event.target\n\n        console.log(\"EVENT STUFF\", \"NAME:\", name, \"VALUE:\", value)\n        let gameObj = this.state.gameObj\n        let newGameObj = update(gameObj, {\n            questions: {\n                [this.state.questionIndex]:\n                {\n                    responses: {\n                        [rIndex]:\n\n                            { response: { $set: value } }\n\n                    }\n                }\n            }\n        })\n        this.setState({\n            gameObj: newGameObj\n        })\n\n    }\n    handleQuestionText(event) {\n        console.log(event)\n        const { value } = event.target\n\n        let gameObj = this.state.gameObj\n        let newGameObj = update(gameObj, {\n            questions: {\n                [this.state.questionIndex]:\n\n                    { Q: { $set: value } }\n\n            }\n        })\n        this.setState({\n            gameObj: newGameObj\n        })\n\n    }\n\n    handleQuestionTraits(whichTrait, event) {\n        const { value } = event.target\n        let gameObj = this.state.gameObj\n        let newGameObj = update(gameObj, {\n            questions: {\n                [this.state.questionIndex]:\n\n                    { [whichTrait]: { $set: value } }\n\n            }\n        })\n        this.setState({\n            gameObj: newGameObj\n        })\n    }\n\n    handleQuestionDropdown(event) {\n        const { value } = event.target\n        const index = this.state.gameObj.questions.map((_q, i) => `Question: ${i + 1}`).indexOf(value)\n        console.log(\"VALUE:\", value, \"INDEX:\", index)\n        this.setState({\n            questionIndex: index\n        })\n    }\n\n\n    updateQuestionDb() {\n        const id = this.getGameIdUrl()\n        console.log(\"HELLO FROM UPDATE QUESTION DB\", id)\n        const gameObj = this.state.gameObj\n        dbUpdate(gameObj, id).then(() => {\n            this.props.history.push(`/`)\n        })\n    }\n\n    removeQuestion() {\n        const id = this.getGameIdUrl();\n        let allNewQs = [...this.state.gameObj.questions]\n        console.log(\"HELLO FROM REMOVE QUESTION\", this.state.questionIndex)\n\n        allNewQs.splice(this.state.questionIndex, 1);\n        const gameObj = this.state.gameObj\n        const newQs = new GameObj(gameObj.name, gameObj.traits, gameObj.avatars, allNewQs)\n        dbUpdate(newQs, id)\n        console.log(\"REMOVED QUESTION HAPPENED\")\n        this.setState({\n            gameObj: newQs,\n            questionIndex: 0\n        })\n    }\n\n    addQuestion() {\n        const id = this.getGameIdUrl()\n        let allNewQs = [...this.state.gameObj.questions]\n        console.log(\"ALL NEW QS\", allNewQs)\n        let traits = Object.values(this.state.gameObj.traits)\n        console.log(\"THESE ARE THE TRAITS\", traits)\n        let newQ = templateQuestion(traits)\n        console.log(\"NEW Q\", newQ)\n        allNewQs.push(newQ)\n        console.log(\"ALL NEW QS\", allNewQs)\n        const gameObj = this.state.gameObj\n        const newQuestions = new GameObj(gameObj.name, gameObj.traits, gameObj.avatars, allNewQs)\n        console.log(\"NEW QUESTIONS TO GO IN DB\", newQuestions)\n        dbUpdate(newQuestions, id)\n        console.log(\"ADD QUESTION HAPPEND\")\n        this.setState({\n            gameObj: newQuestions,\n            questionIndex: newQuestions.questions.length - 1\n        })\n    }\n\n    render() {\n        const gameObj = this.state.gameObj\n        if (!gameObj) {\n            return (<div></div>)\n        }\n        const q = { value: `Question: ${this.state.questionIndex + 1}`, onChange: this.handleQuestionDropdown, options: this.state.gameObj.questions.map((_question, i) => `Question: ${i + 1}`) }\n        const t1 = { value: this.state.gameObj.questions[this.state.questionIndex].trait1, onChange: partial(this.handleQuestionTraits, \"trait1\"), options: Object.values(this.state.gameObj.traits) }\n        const t2 = { value: this.state.gameObj.questions[this.state.questionIndex].trait2, onChange: partial(this.handleQuestionTraits, \"trait2\"), options: Object.values(this.state.gameObj.traits) }\n        const allProps = { qProps: q, t1Props: t1, t2Props: t2 }\n\n        const enabled = (this.state.gameObj.questions.length > 1)\n\n        return (\n            <Container>\n                <div className=\"questionRow\">\n                    <QuestionDropdown {...allProps} />\n                    <Row>\n\n                        <Col size=\"sm-12\">\n                            <label for=\"questionInput\" className=\"qIns qLabel\"><strong>Question: </strong></label>\n                            <Label className=\"questionInput\" text={this.state.gameObj.questions[this.state.questionIndex].Q} onChange={this.handleQuestionText} />\n                            <br></br>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col size=\"sm-3\">\n                        <button className=\"addQButton\" onClick={this.addQuestion}><i class=\"fas fa-plus\"></i> Add Another question</button>\n                        </Col>\n                        <Col size=\"sm-3\">\n                            <button disabled={!enabled} className=\"removeButton\" onClick={this.removeQuestion}><i class=\"fas fa-trash\"></i> Drop Question</button>\n                        </Col>\n                    </Row>\n                </div>\n\n                <br></br>\n\n                {\n                    this.state.gameObj.questions[this.state.questionIndex].responses.map((response, i) => (\n                        <Container fluid>\n                            <Row>\n                                <Col size=\"sm-12\">\n                                    <p className=\"qIns\"><strong>Choice {i + 1}</strong></p>\n                                    <Label text={response.response} onChange={partial(this.handleResponseText, i)} />\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col size=\"sm-12\">\n                                    <p className=\"qIns\"><strong>Outcome {i + 1}</strong></p>\n                                    <Label text={response.outcomes[0].text} onChange={partial(this.handleOutcomeText, i, 0)} />\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col size=\"sm-6\">\n                                    <PointToggler text=\"Affects Trait\" options={Object.values(this.state.gameObj.traits)} value={response.outcomes[0].amount} trait={response.outcomes[0].trait} onChange={\n                                        (value) => this.handleOutcomeTrait(i, 0, value)} plus={partial(this.handleTraitAmount, i, 0, response.outcomes[0].amount + 1)} minus={partial(this.handleTraitAmount, i, 0, response.outcomes[0].amount - 1)} />\n                                </Col>\n\n                                <Col size=\"sm-6\">\n                                    <PointToggler text=\"Affects Trait\" options={Object.values(this.state.gameObj.traits)} value={response.outcomes[1].amount}\n                                        trait={response.outcomes[1].trait} onChange={\n                                            (value) => this.handleOutcomeTrait(i, 1, value)} plus={partial(this.handleTraitAmount, i, 1, response.outcomes[1].amount + 1)} minus={partial(this.handleTraitAmount, i, 1, response.outcomes[1].amount - 1)} />\n                                </Col>\n                            </Row>\n\n                            <br></br>\n                            <br></br>\n                            <hr></hr>\n\n                        </Container>\n\n                    ))\n                }\n                <br></br>\n                <br></br>\n                <br></br>\n                <AdminButton className=\"btn btn-danger\" text=\"Done\" onClick={this.updateQuestionDb} />\n                <br></br>\n                <br></br>\n                <br></br>\n            </Container >\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default ContentEditQuestions;","import React, { Component } from 'react';\nimport { Container } from '../Grid'\nimport '../style.css';\nimport ContentEditQuestions from './contentEditQuestions';\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass ContentCreateQuestions extends Component {\n    state = {\n        gameObj: {}\n    }\n\n    render() {\n\n\n        return (\n            <Container>\n                <ContentEditQuestions history={this.props.history} />\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default ContentCreateQuestions;","import React, { Component } from 'react';\nimport ContentAdmin from './contentAdmin';\nimport ContentCreate from './contentCreate';\nimport ContentCreateAvatars from './contentCreateAvatars';\nimport ContentCreateQuestions from './contentCreateQuestions';\nimport ContentEdit from './contentEdit';\nimport ContentEditQuestions from './contentEditQuestions';\nimport '../style.css';\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass Content extends Component {\n    // state = {\n\n    // }\n\n    render() {\n        console.log(\"WINDOW LOCATION PATHNAME\", window.location.pathname);\n        return (\n            <div className=\"thisContent fluid\">\n                {window.location.pathname === `${process.env.PUBLIC_URL}/` ? (\n                    <ContentAdmin games={this.props.gameNameGameId} />\n                ) : null}\n                {window.location.pathname === `${process.env.PUBLIC_URL}/create` ? (\n                    <ContentCreate history={this.props.history} />\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/create/avatars`) ? (\n                    <ContentCreateAvatars history={this.props.history} />\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/create/questions`) ? (\n                    <ContentCreateQuestions history={this.props.history} />\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/edit/avatars/`) ? (\n                    <ContentEdit globalState={this.props.globalState} history={this.props.history} />\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/edit/questions/`) ? (\n                    <ContentEditQuestions history={this.props.history} />\n                ) : null}\n            </div>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default Content;\n\n\n\n\n\n\n// OLD TERNARY\n// {window.location.pathname === \"/\" ? (\n//     <ContentAdmin />\n// ) : \"/create\" ? (\n//     <ContentCreate />\n// ) : \"/edit\" ? (\n//     <ContentEdit />\n// ) : (\n//     <p>Nothing here</p>\n//     )}","import React, { Component } from 'react';\nimport { Container } from '../components/Grid';\nimport { Header, SubHeader } from '../components/Header'\nimport Content from '../components/Content'\nimport AdminButton from '../components/Button'\nimport '../components/style.css'\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass Admin extends Component {\n\n    render() {\n        return (\n            < Container fluid >\n                <div className=\"appHero\">\n                    <Header text={`Welcome to the dashboard, ${this.props.globalState.organization}.`} />\n                    <SubHeader text=\"Create, Edit, or Drop games for your organization!\" />\n                </div>\n                <Content gameNameGameId={this.props.globalState.gameNameGameId} everyGame={this.props.globalState.allGames} />\n                <AdminButton text=\"Create Game\" onClick={() => this.props.history.push(`/create`)} />\n                <br></br>\n                <br></br>\n                <br></br>\n            </Container >\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default Admin;\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { Container } from '../components/Grid';\nimport { Header, SubHeader } from '../components/Header'\nimport Content from '../components/Content'\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass Create extends Component {\n    render() {\n        return (\n            <Container fluid>\n\n                {window.location.pathname === `${process.env.PUBLIC_URL}/create` ? (\n                    <Container fluid>\n                        <Header text=\"Build your next amazing game!\" />\n                        <SubHeader text=\"Read below for how to get started\" />\n                        <Content history={this.props.history} />\n\n                    </Container>\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/create/avatars`) ? (\n                    <Container fluid>\n                        <Header text=\"Create Avatars\" />\n                        {/* <AvatarHeader /> */}\n                        <Content history={this.props.history} />\n\n                    </Container>\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/create/questions`) ? (\n                    <Container fluid>\n                        <Header text=\"Create Questions\" />\n                        {/* <QuestionDropdown qtext=\"Question\" text=\"Trait\" /> */}\n                        <Content history={this.props.history} />\n\n                    </Container>\n                ) : null}\n\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default Create;","import React, { Component } from 'react';\nimport { Container } from '../components/Grid';\nimport { Header } from '../components/Header'\nimport Content from '../components/Content'\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\nclass Edit extends Component {\n    state = {\n\n    }\n\n    render() {\n        return (\n            <Container fluid>\n\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/edit/avatars/`) ? (\n                    <Container fluid>\n                        <Header text=\"Edit Avatars\" />\n                        {/* <AvatarHeader text=\"Update Avatar Selections\" /> */}\n                        <Content globalState={this.props.globalState} history={this.props.history} />\n\n                    </Container>\n                ) : null}\n                {window.location.pathname.startsWith(`${process.env.PUBLIC_URL}/edit/questions/`) ? (\n                    <Container fluid>\n                        <Header text=\"Edit Questions\" />\n                        <Content history={this.props.history} />\n\n                    </Container>\n                ) : null}\n\n            </Container>\n        )\n    }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default Edit;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Nav from \"./components/Nav\";\nimport Admin from \"./pages/Admin\";\nimport Create from \"./pages/Create\";\nimport Edit from \"./pages/Edit\"\nimport axios from \"axios\"\nimport './App.css';\nimport './components/style.css'\n///////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nclass App extends Component {\n  state = {\n    organization: \"Nonprofit Organization Name\",\n    gameNameGameId: [],\n    currentGameId: undefined,\n    allGames: []\n  }\n\n  componentDidMount() {\n    this.getAllGames();\n  }\n\n  getAllGames() {\n    axios.get(\"https://real-life-api.herokuapp.com/api/games\")\n      .then((results) => {\n        console.log(\"RESULTS.DATA\", results.data)\n        let gameNameGameId = []\n        let nonprofitName = \"\"\n\n        for (let i = 0; i < results.data.length; i++) {\n          let gameObj = {\n            gameId: results.data[i]._id,\n            gameName: results.data[i].name\n          }\n          nonprofitName = \"Seattle Foundation\"\n          gameNameGameId.push(gameObj)\n\n        }\n        console.log(\"GAME NAME AND ID:\", gameNameGameId)\n\n        this.setState({\n          organization: nonprofitName,\n          gameNameGameId: gameNameGameId,\n          allGames: results.data\n        })\n      })\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path={`/`} render={(props) => <Admin {...props} globalState={this.state} />} />\n            <Route prefix path={`/create`} render={(props) => <Create {...props} globalState={this.state} />} />\n            <Route prefix path={`/edit`} render={(props) => <Edit {...props} globalState={this.state} />} />\n            {/* <Route component={NoMatch} /> */}\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}